ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.checkLight,"ax",%progbits
  20              		.align	2
  21              		.global	checkLight
  22              		.code	16
  23              		.thumb_func
  24              		.type	checkLight, %function
  25              	checkLight:
  26              	.LFB62:
  27              		.file 1 "main.c"
   1:main.c        **** #include "project.h"
   2:main.c        **** #include <stdio.h>
   3:main.c        **** 
   4:main.c        **** #define WATERING_TIME_IN_SEC 1
   5:main.c        **** #define STARTING_HOUR 10
   6:main.c        **** #define ENDING_HOUR 20
   7:main.c        **** #define NUMBER_OF_MEASUREMENTS 10
   8:main.c        **** #define BUFFER_SIZE 256
   9:main.c        **** #define OFF 1
  10:main.c        **** #define ON 0
  11:main.c        **** 
  12:main.c        **** char buffer[BUFFER_SIZE];
  13:main.c        **** 
  14:main.c        **** // gitignore 2
  15:main.c        **** 
  16:main.c        **** void checkLight()
  17:main.c        **** {
  28              		.loc 1 17 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  18:main.c        ****     sprintf(buffer, "Checking light\r\n");
  38              		.loc 1 18 0
  39 0002 2F4D     		ldr	r5, .L7
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 2


  40 0004 1122     		movs	r2, #17
  41 0006 2F49     		ldr	r1, .L7+4
  42 0008 2800     		movs	r0, r5
  43 000a FFF7FEFF 		bl	memcpy
  44              	.LVL0:
  19:main.c        ****     UART_UartPutString(buffer);
  45              		.loc 1 19 0
  46 000e 2800     		movs	r0, r5
  47 0010 FFF7FEFF 		bl	UART_UartPutString
  48              	.LVL1:
  20:main.c        ****     // Get current hour for clock
  21:main.c        ****     int hour = RTC_GetHours(RTC_GetTime());
  49              		.loc 1 21 0
  50 0014 FFF7FEFF 		bl	RTC_GetTime
  51              	.LVL2:
  52              	.LBB6:
  53              	.LBB7:
  54              		.file 2 "Generated_Source\\PSoC4/RTC.h"
   1:Generated_Source\PSoC4/RTC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC.h **** * \file Name: RTC.h
   3:Generated_Source\PSoC4/RTC.h **** * \version 1.10
   4:Generated_Source\PSoC4/RTC.h **** *
   5:Generated_Source\PSoC4/RTC.h **** * \brief
   6:Generated_Source\PSoC4/RTC.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   7:Generated_Source\PSoC4/RTC.h **** *
   8:Generated_Source\PSoC4/RTC.h **** ********************************************************************************
   9:Generated_Source\PSoC4/RTC.h **** * Copyright 2015-2016, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/RTC.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/RTC.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/RTC.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/RTC.h **** 
  15:Generated_Source\PSoC4/RTC.h **** #if !defined(CY_RTC_P4_RTC_H)
  16:Generated_Source\PSoC4/RTC.h **** #define CY_RTC_P4_RTC_H
  17:Generated_Source\PSoC4/RTC.h **** 
  18:Generated_Source\PSoC4/RTC.h **** #include <cytypes.h>
  19:Generated_Source\PSoC4/RTC.h **** #include <CyLib.h>
  20:Generated_Source\PSoC4/RTC.h **** 
  21:Generated_Source\PSoC4/RTC.h **** 
  22:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  23:Generated_Source\PSoC4/RTC.h **** *    Data types definition
  24:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  25:Generated_Source\PSoC4/RTC.h **** 
  26:Generated_Source\PSoC4/RTC.h **** typedef enum
  27:Generated_Source\PSoC4/RTC.h **** {
  28:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_RELATIVE = 0u,
  29:Generated_Source\PSoC4/RTC.h ****     RTC_DST_DATE_FIXED = 1u
  30:Generated_Source\PSoC4/RTC.h **** }RTC_DST_DATETYPE_ENUM;
  31:Generated_Source\PSoC4/RTC.h **** 
  32:Generated_Source\PSoC4/RTC.h **** /**
  33:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_structures
  34:Generated_Source\PSoC4/RTC.h **** * @{
  35:Generated_Source\PSoC4/RTC.h **** */
  36:Generated_Source\PSoC4/RTC.h **** 
  37:Generated_Source\PSoC4/RTC.h **** /**
  38:Generated_Source\PSoC4/RTC.h **** * This is the data structure that is used to save the current time and date 
  39:Generated_Source\PSoC4/RTC.h **** * (RTC_currentTimeDate), and Alarm time and date (RTC_alarmCfgTimeDate).
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 3


  40:Generated_Source\PSoC4/RTC.h **** */
  41:Generated_Source\PSoC4/RTC.h **** typedef struct
  42:Generated_Source\PSoC4/RTC.h **** {
  43:Generated_Source\PSoC4/RTC.h ****     uint32 time;
  44:Generated_Source\PSoC4/RTC.h ****     uint32 date;
  45:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;
  46:Generated_Source\PSoC4/RTC.h ****     uint32 status;
  47:Generated_Source\PSoC4/RTC.h **** }RTC_DATE_TIME;
  48:Generated_Source\PSoC4/RTC.h **** 
  49:Generated_Source\PSoC4/RTC.h **** /**
  50:Generated_Source\PSoC4/RTC.h **** * This is the data structure that is used to save time and date values for 
  51:Generated_Source\PSoC4/RTC.h **** * Daylight Savings Time Start and Stop (RTC_dstTimeDateStart and 
  52:Generated_Source\PSoC4/RTC.h **** * RTC_dstTimeDateStop).
  53:Generated_Source\PSoC4/RTC.h **** */
  54:Generated_Source\PSoC4/RTC.h **** typedef struct
  55:Generated_Source\PSoC4/RTC.h **** {
  56:Generated_Source\PSoC4/RTC.h ****     uint32 hour;
  57:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfWeek;
  58:Generated_Source\PSoC4/RTC.h ****     uint32 dayOfMonth;
  59:Generated_Source\PSoC4/RTC.h ****     uint32 weekOfMonth;
  60:Generated_Source\PSoC4/RTC.h ****     uint32 month;
  61:Generated_Source\PSoC4/RTC.h ****     uint8  timeFormat;
  62:Generated_Source\PSoC4/RTC.h **** }RTC_DST_TIME;
  63:Generated_Source\PSoC4/RTC.h **** 
  64:Generated_Source\PSoC4/RTC.h **** /** @} structures */
  65:Generated_Source\PSoC4/RTC.h **** 
  66:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
  67:Generated_Source\PSoC4/RTC.h **** *    Enumerated Types and Parameters
  68:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
  69:Generated_Source\PSoC4/RTC.h **** /* Time Format setting constants */
  70:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_12 1
  71:Generated_Source\PSoC4/RTC.h **** #define RTC__HOUR_24 0
  72:Generated_Source\PSoC4/RTC.h **** 
  73:Generated_Source\PSoC4/RTC.h **** /*  Date Format setting constants */
  74:Generated_Source\PSoC4/RTC.h **** #define RTC__MM_DD_YYYY 0
  75:Generated_Source\PSoC4/RTC.h **** #define RTC__DD_MM_YYYY 1
  76:Generated_Source\PSoC4/RTC.h **** #define RTC__YYYY_MM_DD 2
  77:Generated_Source\PSoC4/RTC.h **** 
  78:Generated_Source\PSoC4/RTC.h **** /* Date Type setting constants */
  79:Generated_Source\PSoC4/RTC.h **** #define RTC__RELATIVE 0
  80:Generated_Source\PSoC4/RTC.h **** #define RTC__FIXED 1
  81:Generated_Source\PSoC4/RTC.h **** 
  82:Generated_Source\PSoC4/RTC.h **** /* DST Hour setting constants */
  83:Generated_Source\PSoC4/RTC.h **** #define RTC__H0000 0
  84:Generated_Source\PSoC4/RTC.h **** #define RTC__H0100 1
  85:Generated_Source\PSoC4/RTC.h **** #define RTC__H0200 2
  86:Generated_Source\PSoC4/RTC.h **** #define RTC__H0300 3
  87:Generated_Source\PSoC4/RTC.h **** #define RTC__H0400 4
  88:Generated_Source\PSoC4/RTC.h **** #define RTC__H0500 5
  89:Generated_Source\PSoC4/RTC.h **** #define RTC__H0600 6
  90:Generated_Source\PSoC4/RTC.h **** #define RTC__H0700 7
  91:Generated_Source\PSoC4/RTC.h **** #define RTC__H0800 8
  92:Generated_Source\PSoC4/RTC.h **** #define RTC__H0900 9
  93:Generated_Source\PSoC4/RTC.h **** #define RTC__H1000 10
  94:Generated_Source\PSoC4/RTC.h **** #define RTC__H1100 11
  95:Generated_Source\PSoC4/RTC.h **** #define RTC__H1200 12
  96:Generated_Source\PSoC4/RTC.h **** #define RTC__H1300 13
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 4


  97:Generated_Source\PSoC4/RTC.h **** #define RTC__H1400 14
  98:Generated_Source\PSoC4/RTC.h **** #define RTC__H1500 15
  99:Generated_Source\PSoC4/RTC.h **** #define RTC__H1600 16
 100:Generated_Source\PSoC4/RTC.h **** #define RTC__H1700 17
 101:Generated_Source\PSoC4/RTC.h **** #define RTC__H1800 18
 102:Generated_Source\PSoC4/RTC.h **** #define RTC__H1900 19
 103:Generated_Source\PSoC4/RTC.h **** #define RTC__H2000 20
 104:Generated_Source\PSoC4/RTC.h **** #define RTC__H2100 21
 105:Generated_Source\PSoC4/RTC.h **** #define RTC__H2200 22
 106:Generated_Source\PSoC4/RTC.h **** #define RTC__H2300 23
 107:Generated_Source\PSoC4/RTC.h **** 
 108:Generated_Source\PSoC4/RTC.h **** /* DST DayOfWeek setting constants */
 109:Generated_Source\PSoC4/RTC.h **** #define RTC__SUNDAY 1
 110:Generated_Source\PSoC4/RTC.h **** #define RTC__MONDAY 2
 111:Generated_Source\PSoC4/RTC.h **** #define RTC__TUESDAY 3
 112:Generated_Source\PSoC4/RTC.h **** #define RTC__WEDNESDAY 4
 113:Generated_Source\PSoC4/RTC.h **** #define RTC__THURSDAY 5
 114:Generated_Source\PSoC4/RTC.h **** #define RTC__FRIDAY 6
 115:Generated_Source\PSoC4/RTC.h **** #define RTC__SATURDAY 7
 116:Generated_Source\PSoC4/RTC.h **** 
 117:Generated_Source\PSoC4/RTC.h **** /* DST Month setting constants */
 118:Generated_Source\PSoC4/RTC.h **** #define RTC__JAN 1
 119:Generated_Source\PSoC4/RTC.h **** #define RTC__FEB 2
 120:Generated_Source\PSoC4/RTC.h **** #define RTC__MAR 3
 121:Generated_Source\PSoC4/RTC.h **** #define RTC__APR 4
 122:Generated_Source\PSoC4/RTC.h **** #define RTC__MAY 5
 123:Generated_Source\PSoC4/RTC.h **** #define RTC__JUN 6
 124:Generated_Source\PSoC4/RTC.h **** #define RTC__JUL 7
 125:Generated_Source\PSoC4/RTC.h **** #define RTC__AUG 8
 126:Generated_Source\PSoC4/RTC.h **** #define RTC__SEP 9
 127:Generated_Source\PSoC4/RTC.h **** #define RTC__OCT 10
 128:Generated_Source\PSoC4/RTC.h **** #define RTC__NOV 11
 129:Generated_Source\PSoC4/RTC.h **** #define RTC__DEC 12
 130:Generated_Source\PSoC4/RTC.h **** 
 131:Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants */
 132:Generated_Source\PSoC4/RTC.h **** #define RTC__FIRST 1
 133:Generated_Source\PSoC4/RTC.h **** #define RTC__SECOND 2
 134:Generated_Source\PSoC4/RTC.h **** #define RTC__THIRD 3
 135:Generated_Source\PSoC4/RTC.h **** #define RTC__FOURTH 4
 136:Generated_Source\PSoC4/RTC.h **** #define RTC__FIFTH 5
 137:Generated_Source\PSoC4/RTC.h **** #define RTC__LAST 6
 138:Generated_Source\PSoC4/RTC.h **** 
 139:Generated_Source\PSoC4/RTC.h **** 
 140:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DATA_FORMAT     (0u)
 141:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_TIME_FORMAT     (0u)
 142:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_UPDATE_MODE     (0u)
 143:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_SECOND          (31u)
 144:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MINUTE          (27u)
 145:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_HOUR            (18u)
 146:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DAY             (7u)
 147:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_MONTH           (1u)
 148:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_YEAR            (2018u)
 149:Generated_Source\PSoC4/RTC.h **** 
 150:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_ALARM_STATUS    (0u)
 151:Generated_Source\PSoC4/RTC.h **** 
 152:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STATUS      (0u)
 153:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_DATE_TYPE   (0u)
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 5


 154:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_MONTH (3uL)
 155:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_WOM   (6uL)
 156:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOM   (22uL)
 157:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_DOW   (1uL)
 158:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_START_HRS   (0uL)
 159:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_MONTH  (10uL)
 160:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOM    (22uL)
 161:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_DOW    (1uL)
 162:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_WOM    (6uL)
 163:Generated_Source\PSoC4/RTC.h **** #define RTC_INITIAL_DST_STOP_HRS    (0uL)
 164:Generated_Source\PSoC4/RTC.h **** 
 165:Generated_Source\PSoC4/RTC.h **** /* Day of week definitions */
 166:Generated_Source\PSoC4/RTC.h **** #define RTC_SUNDAY     (RTC__SUNDAY)
 167:Generated_Source\PSoC4/RTC.h **** #define RTC_MONDAY     (RTC__MONDAY)
 168:Generated_Source\PSoC4/RTC.h **** #define RTC_TUESDAY    (RTC__TUESDAY)
 169:Generated_Source\PSoC4/RTC.h **** #define RTC_WEDNESDAY  (RTC__WEDNESDAY)
 170:Generated_Source\PSoC4/RTC.h **** #define RTC_THURSDAY   (RTC__THURSDAY)
 171:Generated_Source\PSoC4/RTC.h **** #define RTC_FRIDAY     (RTC__FRIDAY)
 172:Generated_Source\PSoC4/RTC.h **** #define RTC_SATURDAY   (RTC__SATURDAY)
 173:Generated_Source\PSoC4/RTC.h **** 
 174:Generated_Source\PSoC4/RTC.h **** /* DST WeekOfMonth setting constants definitions */
 175:Generated_Source\PSoC4/RTC.h **** #define RTC_FIRST      (RTC__FIRST)
 176:Generated_Source\PSoC4/RTC.h **** #define RTC_SECOND     (RTC__SECOND)
 177:Generated_Source\PSoC4/RTC.h **** #define RTC_THIRD      (RTC__THIRD)
 178:Generated_Source\PSoC4/RTC.h **** #define RTC_FOURTH     (RTC__FOURTH)
 179:Generated_Source\PSoC4/RTC.h **** #define RTC_FIFTH      (RTC__FIFTH)
 180:Generated_Source\PSoC4/RTC.h **** #define RTC_LAST       (RTC__LAST)
 181:Generated_Source\PSoC4/RTC.h **** 
 182:Generated_Source\PSoC4/RTC.h **** /* Month definitions */
 183:Generated_Source\PSoC4/RTC.h **** #define RTC_JANUARY    (RTC__JAN)
 184:Generated_Source\PSoC4/RTC.h **** #define RTC_FEBRUARY   (RTC__FEB)
 185:Generated_Source\PSoC4/RTC.h **** #define RTC_MARCH      (RTC__MAR)
 186:Generated_Source\PSoC4/RTC.h **** #define RTC_APRIL      (RTC__APR)
 187:Generated_Source\PSoC4/RTC.h **** #define RTC_MAY        (RTC__MAY)
 188:Generated_Source\PSoC4/RTC.h **** #define RTC_JUNE       (RTC__JUN)
 189:Generated_Source\PSoC4/RTC.h **** #define RTC_JULY       (RTC__JUL)
 190:Generated_Source\PSoC4/RTC.h **** #define RTC_AUGUST     (RTC__AUG)
 191:Generated_Source\PSoC4/RTC.h **** #define RTC_SEPTEMBER  (RTC__SEP)
 192:Generated_Source\PSoC4/RTC.h **** #define RTC_OCTOBER    (RTC__OCT)
 193:Generated_Source\PSoC4/RTC.h **** #define RTC_NOVEMBER   (RTC__NOV)
 194:Generated_Source\PSoC4/RTC.h **** #define RTC_DECEMBER   (RTC__DEC)
 195:Generated_Source\PSoC4/RTC.h **** 
 196:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_PER_WEEK       (7u)
 197:Generated_Source\PSoC4/RTC.h **** 
 198:Generated_Source\PSoC4/RTC.h **** /* Number of days in month definitions */
 199:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JANUARY     (31u)
 200:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_FEBRUARY    (28u)
 201:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MARCH       (31u)
 202:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_APRIL       (30u)
 203:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_MAY         (31u)
 204:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JUNE        (30u)
 205:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_JULY        (31u)
 206:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_AUGUST      (31u)
 207:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_SEPTEMBER   (30u)
 208:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_OCTOBER     (31u)
 209:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_NOVEMBER    (30u)
 210:Generated_Source\PSoC4/RTC.h **** #define RTC_DAYS_IN_DECEMBER    (31u)
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 6


 211:Generated_Source\PSoC4/RTC.h **** 
 212:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTHS_PER_YEAR     (12uL)
 213:Generated_Source\PSoC4/RTC.h **** 
 214:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_DAY       (24uL)
 215:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_PER_HALF_DAY  (12uL)
 216:Generated_Source\PSoC4/RTC.h **** 
 217:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_MINUTE  (60uL)
 218:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_HOUR    (3600uL)
 219:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_DAY     (24uL * 3600uL)
 220:Generated_Source\PSoC4/RTC.h **** 
 221:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 222:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 223:Generated_Source\PSoC4/RTC.h **** 
 224:Generated_Source\PSoC4/RTC.h **** #define RTC_UNIX_TIME_PM   ((12uL * 3600uL) + 1uL)
 225:Generated_Source\PSoC4/RTC.h **** 
 226:Generated_Source\PSoC4/RTC.h **** /* AM/PM status definitions */
 227:Generated_Source\PSoC4/RTC.h **** #define RTC_AM                 (0u)
 228:Generated_Source\PSoC4/RTC.h **** #define RTC_PM                 (1u)
 229:Generated_Source\PSoC4/RTC.h **** 
 230:Generated_Source\PSoC4/RTC.h **** /* Time format definitions */
 231:Generated_Source\PSoC4/RTC.h **** #define RTC_12_HOURS_FORMAT    (RTC__HOUR_12)
 232:Generated_Source\PSoC4/RTC.h **** #define RTC_24_HOURS_FORMAT    (RTC__HOUR_24)
 233:Generated_Source\PSoC4/RTC.h **** 
 234:Generated_Source\PSoC4/RTC.h **** /* UNIX time begins in 1970 year.  */
 235:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_0             (1970u)
 236:Generated_Source\PSoC4/RTC.h **** 
 237:Generated_Source\PSoC4/RTC.h **** /* Definition of date register fields */
 238:Generated_Source\PSoC4/RTC.h **** #if(RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY)
 239:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (28u)
 240:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (24u)
 241:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (20u)
 242:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (16u)
 243:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 244:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 245:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 246:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 247:Generated_Source\PSoC4/RTC.h **** #elif(RTC_INITIAL_DATA_FORMAT == RTC__DD_MM_YYYY)
 248:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (20u)
 249:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (16u)
 250:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (28u)
 251:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (24u)
 252:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (12u)
 253:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (8u)
 254:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (4u)
 255:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (0u)
 256:Generated_Source\PSoC4/RTC.h **** #else
 257:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_MONTH_OFFSET   (12u)
 258:Generated_Source\PSoC4/RTC.h ****     #define RTC_MONTH_OFFSET      (8u)
 259:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_DAY_OFFSET     (4u)
 260:Generated_Source\PSoC4/RTC.h ****     #define RTC_DAY_OFFSET        (0u)
 261:Generated_Source\PSoC4/RTC.h ****     #define RTC_1000_YEAR_OFFSET  (28u)
 262:Generated_Source\PSoC4/RTC.h ****     #define RTC_100_YEAR_OFFSET   (24u)
 263:Generated_Source\PSoC4/RTC.h ****     #define RTC_10_YEAR_OFFSET    (20u)
 264:Generated_Source\PSoC4/RTC.h ****     #define RTC_YEAR_OFFSET       (16u)
 265:Generated_Source\PSoC4/RTC.h **** #endif /* (RTC_INITIAL_DATA_FORMAT == RTC__MM_DD_YYYY) */
 266:Generated_Source\PSoC4/RTC.h **** 
 267:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MONTH_MASK          (0x00000001uL << RTC_10_MONTH_OFFSET)
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 7


 268:Generated_Source\PSoC4/RTC.h **** #define RTC_MONTH_MASK             (0x0000000FuL << RTC_MONTH_OFFSET)
 269:Generated_Source\PSoC4/RTC.h **** #define RTC_10_DAY_MASK            (0x00000003uL << RTC_10_DAY_OFFSET)
 270:Generated_Source\PSoC4/RTC.h **** #define RTC_DAY_MASK               (0x0000000FuL << RTC_DAY_OFFSET)
 271:Generated_Source\PSoC4/RTC.h **** #define RTC_1000_YEAR_MASK         (0x00000003uL << RTC_1000_YEAR_OFFSET)
 272:Generated_Source\PSoC4/RTC.h **** #define RTC_100_YEAR_MASK          (0x0000000FuL << RTC_100_YEAR_OFFSET)
 273:Generated_Source\PSoC4/RTC.h **** #define RTC_10_YEAR_MASK           (0x0000000FuL << RTC_10_YEAR_OFFSET)
 274:Generated_Source\PSoC4/RTC.h **** #define RTC_YEAR_MASK              (0x0000000FuL << RTC_YEAR_OFFSET)
 275:Generated_Source\PSoC4/RTC.h **** 
 276:Generated_Source\PSoC4/RTC.h **** #define  RTC_MONTH_FULL_MASK       (RTC_10_MONTH_MASK  | RTC_MONTH_MASK)
 277:Generated_Source\PSoC4/RTC.h **** #define  RTC_DAY_FULL_MASK         (RTC_10_DAY_MASK    | RTC_DAY_MASK)
 278:Generated_Source\PSoC4/RTC.h **** #define  RTC_YEAR_FULL_MASK        (RTC_1000_YEAR_MASK | RTC_100_YEAR_MASK |\
 279:Generated_Source\PSoC4/RTC.h ****                                                  RTC_10_YEAR_MASK   | RTC_YEAR_MASK)
 280:Generated_Source\PSoC4/RTC.h **** 
 281:Generated_Source\PSoC4/RTC.h **** 
 282:Generated_Source\PSoC4/RTC.h **** /* Definition of time register fields */
 283:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_OFFSET     (23u)
 284:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_OFFSET   (22u)
 285:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_OFFSET        (20u)
 286:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_OFFSET           (16u)
 287:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_OFFSET      (12u)
 288:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_OFFSET         (8u)
 289:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_OFFSET      (4u)
 290:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_OFFSET         (0u)
 291:Generated_Source\PSoC4/RTC.h **** 
 292:Generated_Source\PSoC4/RTC.h **** #define RTC_TIME_FORMAT_MASK       (0x00000001uL << RTC_TIME_FORMAT_OFFSET)
 293:Generated_Source\PSoC4/RTC.h **** #define RTC_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_PERIOD_OF_DAY_OFFSET)
 294:Generated_Source\PSoC4/RTC.h **** #define RTC_10_HOURS_MASK          (0x00000003uL << RTC_10_HOURS_OFFSET)
 295:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_MASK             (0x0000000FuL << RTC_HOURS_OFFSET)
 296:Generated_Source\PSoC4/RTC.h **** #define RTC_10_MINUTES_MASK        (0x00000007uL << RTC_10_MINUTES_OFFSET)
 297:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_MASK           (0x0000000FuL << RTC_MINUTES_OFFSET)
 298:Generated_Source\PSoC4/RTC.h **** #define RTC_10_SECONDS_MASK        (0x00000007uL << RTC_10_SECONDS_OFFSET)
 299:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_MASK           (0x0000000FuL << RTC_SECONDS_OFFSET)
 300:Generated_Source\PSoC4/RTC.h **** 
 301:Generated_Source\PSoC4/RTC.h **** #define RTC_HOURS_FULL_MASK        (RTC_10_HOURS_MASK   | RTC_HOURS_MASK)
 302:Generated_Source\PSoC4/RTC.h **** #define RTC_MINUTES_FULL_MASK      (RTC_10_MINUTES_MASK | RTC_MINUTES_MASK)
 303:Generated_Source\PSoC4/RTC.h **** #define RTC_SECONDS_FULL_MASK      (RTC_10_SECONDS_MASK | RTC_SECONDS_MASK)
 304:Generated_Source\PSoC4/RTC.h **** 
 305:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_SEC_MASK         (0x00000001uL)
 306:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MIN_MASK         (0x00000002uL)
 307:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_HOUR_MASK        (0x00000004uL)
 308:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 309:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 310:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_MONTH_MASK       (0x00000020uL)
 311:Generated_Source\PSoC4/RTC.h **** #define RTC_ALARM_YEAR_MASK        (0x00000040uL)
 312:Generated_Source\PSoC4/RTC.h **** 
 313:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST_OFFSET      (1u)
 314:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_ALARM_OFFSET    (2u)
 315:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY_OFFSET       (3u)
 316:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM_OFFSET    (4u)
 317:Generated_Source\PSoC4/RTC.h **** 
 318:Generated_Source\PSoC4/RTC.h **** /* Definition of the RTC status values. */
 319:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_DST             (1uL << RTC_STATUS_DST_OFFSET)
 320:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_LY              (1uL << RTC_STATUS_LY_OFFSET)
 321:Generated_Source\PSoC4/RTC.h **** #define RTC_STATUS_AM_PM           (1uL << RTC_STATUS_AM_PM_OFFSET)
 322:Generated_Source\PSoC4/RTC.h **** 
 323:Generated_Source\PSoC4/RTC.h **** /* Number of bits per one BCD digit. */
 324:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_NUMBER_SIZE        (4u)
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 8


 325:Generated_Source\PSoC4/RTC.h **** #define RTC_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 326:Generated_Source\PSoC4/RTC.h **** 
 327:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 328:Generated_Source\PSoC4/RTC.h **** *    Function Prototypes
 329:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 330:Generated_Source\PSoC4/RTC.h **** /**
 331:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 332:Generated_Source\PSoC4/RTC.h **** * @{
 333:Generated_Source\PSoC4/RTC.h **** */
 334:Generated_Source\PSoC4/RTC.h **** void   RTC_Start(void);
 335:Generated_Source\PSoC4/RTC.h **** void   RTC_Stop(void);
 336:Generated_Source\PSoC4/RTC.h **** void   RTC_Init(void);
 337:Generated_Source\PSoC4/RTC.h **** void   RTC_SetUnixTime(uint64 unixTime);
 338:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetUnixTime(void);
 339:Generated_Source\PSoC4/RTC.h **** void   RTC_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 340:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetPeriod(void);
 341:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetRefOneSec(void);
 342:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 343:Generated_Source\PSoC4/RTC.h **** void   RTC_GetDateAndTime(RTC_DATE_TIME* dateTime);
 344:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetTime(void);
 345:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetDate(void);
 346:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmDateAndTime(const RTC_DATE_TIME* alarmTime);
 347:Generated_Source\PSoC4/RTC.h **** void   RTC_GetAlarmDateAndTime(RTC_DATE_TIME* alarmTimeDate);
 348:Generated_Source\PSoC4/RTC.h **** void   RTC_SetAlarmMask(uint32 mask);
 349:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmMask(void);
 350:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ReadStatus(void);
 351:Generated_Source\PSoC4/RTC.h **** uint32 RTC_GetAlarmStatus(void);
 352:Generated_Source\PSoC4/RTC.h **** void   RTC_ClearAlarmStatus(void);
 353:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStartTime(const RTC_DST_TIME* dstStartTime,
 354:Generated_Source\PSoC4/RTC.h ****                                               RTC_DST_DATETYPE_ENUM type);
 355:Generated_Source\PSoC4/RTC.h **** void   RTC_SetDSTStopTime(const RTC_DST_TIME* dstStopTime,
 356:Generated_Source\PSoC4/RTC.h ****                                              RTC_DST_DATETYPE_ENUM type);
 357:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertBCDToDec(uint32 bcdNum);
 358:Generated_Source\PSoC4/RTC.h **** uint32 RTC_ConvertDecToBCD(uint32 decNum);
 359:Generated_Source\PSoC4/RTC.h **** void   RTC_Update(void);
 360:Generated_Source\PSoC4/RTC.h **** void*  RTC_SetAlarmHandler(void (*CallbackFunction)(void));
 361:Generated_Source\PSoC4/RTC.h **** 
 362:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructDate(uint32 month, uint32 day, uint32 year);
 363:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uint3
 364:Generated_Source\PSoC4/RTC.h **** /** @} api */
 365:Generated_Source\PSoC4/RTC.h **** 
 366:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetTimeFormat(uint32 inputTime);
 367:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 368:Generated_Source\PSoC4/RTC.h **** 
 369:Generated_Source\PSoC4/RTC.h **** /**
 370:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 371:Generated_Source\PSoC4/RTC.h **** * @{
 372:Generated_Source\PSoC4/RTC.h **** */
 373:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_LeapYear(uint32 year);
 374:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_IsBitSet(uint32 var, uint32 mask);
 375:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetSecond(uint32 inputTime);
 376:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMinutes(uint32 inputTime);
 377:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetHours(uint32 inputTime);
 378:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetAmPm(uint32 inputTime);
 379:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDay(uint32 date);
 380:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetMonth(uint32 date);
 381:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetYear(uint32 date);
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 9


 382:Generated_Source\PSoC4/RTC.h **** /** @} api */
 383:Generated_Source\PSoC4/RTC.h **** 
 384:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetSecond(uint32 inputTime, uint32 inputSecond);
 385:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMinutes(uint32 inputTime, uint32 inputMinute);
 386:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetHours(uint32 inputTime, uint32 inputHours);
 387:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetAmPm(uint32 inputTime, uint32 periodOfDay);
 388:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetDay(uint32 inputDate, uint32 inputDay);
 389:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetMonth(uint32 inputDate, uint32 inputMonth);
 390:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_SetYear(uint32 inputDate, uint32 inputYear);
 391:Generated_Source\PSoC4/RTC.h **** 
 392:Generated_Source\PSoC4/RTC.h **** uint64 RTC_ConstructUnixAlarmTime(const RTC_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 393:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetDstUnixTime(const RTC_DST_TIME* dstTime);
 394:Generated_Source\PSoC4/RTC.h **** uint64 RTC_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 395:Generated_Source\PSoC4/RTC.h **** 
 396:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMinSec(uint32 curVal);
 397:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextHour(uint32 curVal);
 398:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask);
 399:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextMonth(uint32 curMonth);
 400:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetNextYear(uint32 curYear);
 401:Generated_Source\PSoC4/RTC.h **** static uint32 RTC_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 402:Generated_Source\PSoC4/RTC.h **** 
 403:Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysInMonth(uint32 month, uint32 year);
 404:Generated_Source\PSoC4/RTC.h **** uint32 RTC_DaysBeforeMonth(uint32 month, uint32 year);
 405:Generated_Source\PSoC4/RTC.h **** 
 406:Generated_Source\PSoC4/RTC.h **** /**
 407:Generated_Source\PSoC4/RTC.h **** * \addtogroup group_api
 408:Generated_Source\PSoC4/RTC.h **** * @{
 409:Generated_Source\PSoC4/RTC.h **** */
 410:Generated_Source\PSoC4/RTC.h **** void   RTC_UnixToDateTime(RTC_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 411:Generated_Source\PSoC4/RTC.h **** uint64 RTC_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 412:Generated_Source\PSoC4/RTC.h **** /** @} api */
 413:Generated_Source\PSoC4/RTC.h **** 
 414:Generated_Source\PSoC4/RTC.h **** uint32 RTC_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 415:Generated_Source\PSoC4/RTC.h **** 
 416:Generated_Source\PSoC4/RTC.h **** 
 417:Generated_Source\PSoC4/RTC.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 418:Generated_Source\PSoC4/RTC.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE))
 419:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcSetCallback(uint32 wdtNumber);
 420:Generated_Source\PSoC4/RTC.h ****         static void RTC_CySysRtcResetCallback(uint32 wdtNumber);
 421:Generated_Source\PSoC4/RTC.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_INITIAL_UPDATE_MODE)) */
 422:Generated_Source\PSoC4/RTC.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 423:Generated_Source\PSoC4/RTC.h **** 
 424:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 425:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_IsBitSet
 426:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 427:Generated_Source\PSoC4/RTC.h **** *
 428:Generated_Source\PSoC4/RTC.h **** * \brief
 429:Generated_Source\PSoC4/RTC.h **** *  Checks the state of a bit passed through parameter.
 430:Generated_Source\PSoC4/RTC.h **** *
 431:Generated_Source\PSoC4/RTC.h **** * \param
 432:Generated_Source\PSoC4/RTC.h **** *  var The variable to be checked.
 433:Generated_Source\PSoC4/RTC.h **** * \param
 434:Generated_Source\PSoC4/RTC.h **** *  mask The mask for a bit to be checked.
 435:Generated_Source\PSoC4/RTC.h **** *
 436:Generated_Source\PSoC4/RTC.h **** * \return
 437:Generated_Source\PSoC4/RTC.h **** *  0u - Bit is not set.
 438:Generated_Source\PSoC4/RTC.h **** * \return
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 10


 439:Generated_Source\PSoC4/RTC.h **** *  1u - Bit is set.
 440:Generated_Source\PSoC4/RTC.h **** *
 441:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 442:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_IsBitSet(uint32 var, uint32 mask)
 443:Generated_Source\PSoC4/RTC.h **** {
 444:Generated_Source\PSoC4/RTC.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
 445:Generated_Source\PSoC4/RTC.h **** }
 446:Generated_Source\PSoC4/RTC.h **** 
 447:Generated_Source\PSoC4/RTC.h **** 
 448:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 449:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_LeapYear
 450:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 451:Generated_Source\PSoC4/RTC.h **** *
 452:Generated_Source\PSoC4/RTC.h **** * \brief
 453:Generated_Source\PSoC4/RTC.h **** * Checks whether the year passed through the parameter is
 454:Generated_Source\PSoC4/RTC.h **** * leap or no.
 455:Generated_Source\PSoC4/RTC.h **** *
 456:Generated_Source\PSoC4/RTC.h **** * \param
 457:Generated_Source\PSoC4/RTC.h **** *  year The year to be checked.
 458:Generated_Source\PSoC4/RTC.h **** *
 459:Generated_Source\PSoC4/RTC.h **** *
 460:Generated_Source\PSoC4/RTC.h **** * \return
 461:Generated_Source\PSoC4/RTC.h **** *  0u - The year is not leap.
 462:Generated_Source\PSoC4/RTC.h **** * \return
 463:Generated_Source\PSoC4/RTC.h **** *  1u - The year is leap.
 464:Generated_Source\PSoC4/RTC.h **** *
 465:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 466:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_LeapYear(uint32 year)
 467:Generated_Source\PSoC4/RTC.h **** {
 468:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 469:Generated_Source\PSoC4/RTC.h **** 
 470:Generated_Source\PSoC4/RTC.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
 471:Generated_Source\PSoC4/RTC.h ****     {
 472:Generated_Source\PSoC4/RTC.h ****         retVal = 1uL;
 473:Generated_Source\PSoC4/RTC.h ****     }
 474:Generated_Source\PSoC4/RTC.h ****     else
 475:Generated_Source\PSoC4/RTC.h ****     {
 476:Generated_Source\PSoC4/RTC.h ****         retVal = 0uL;
 477:Generated_Source\PSoC4/RTC.h ****     }
 478:Generated_Source\PSoC4/RTC.h **** 
 479:Generated_Source\PSoC4/RTC.h ****     return(retVal);
 480:Generated_Source\PSoC4/RTC.h **** }
 481:Generated_Source\PSoC4/RTC.h **** 
 482:Generated_Source\PSoC4/RTC.h **** 
 483:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 484:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetSecond
 485:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 486:Generated_Source\PSoC4/RTC.h **** *
 487:Generated_Source\PSoC4/RTC.h **** * \brief
 488:Generated_Source\PSoC4/RTC.h **** *  Returns the seconds value from the time value that is passed as a/the parameter.
 489:Generated_Source\PSoC4/RTC.h **** *
 490:Generated_Source\PSoC4/RTC.h **** * \param
 491:Generated_Source\PSoC4/RTC.h **** *  time The time value.
 492:Generated_Source\PSoC4/RTC.h **** *
 493:Generated_Source\PSoC4/RTC.h **** * \return
 494:Generated_Source\PSoC4/RTC.h **** *  The seconds value.
 495:Generated_Source\PSoC4/RTC.h **** *
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 11


 496:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 497:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetSecond(uint32 inputTime)
 498:Generated_Source\PSoC4/RTC.h **** {
 499:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 500:Generated_Source\PSoC4/RTC.h **** 
 501:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_SECONDS_MASK) >> RTC_10_SECONDS_OFFSET) * 10u;
 502:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_SECONDS_MASK) >> RTC_SECONDS_OFFSET;
 503:Generated_Source\PSoC4/RTC.h **** 
 504:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 505:Generated_Source\PSoC4/RTC.h **** }
 506:Generated_Source\PSoC4/RTC.h **** 
 507:Generated_Source\PSoC4/RTC.h **** 
 508:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 509:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetMinutes
 510:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 511:Generated_Source\PSoC4/RTC.h **** *
 512:Generated_Source\PSoC4/RTC.h **** * \brief
 513:Generated_Source\PSoC4/RTC.h **** *  Returns the minutes value from the time value that is passed as a/the 
 514:Generated_Source\PSoC4/RTC.h **** * parameter.
 515:Generated_Source\PSoC4/RTC.h **** *
 516:Generated_Source\PSoC4/RTC.h **** * \param
 517:Generated_Source\PSoC4/RTC.h **** *  time The time value.
 518:Generated_Source\PSoC4/RTC.h **** *
 519:Generated_Source\PSoC4/RTC.h **** * \return
 520:Generated_Source\PSoC4/RTC.h **** *  The minutes value.
 521:Generated_Source\PSoC4/RTC.h **** *
 522:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 523:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetMinutes(uint32 inputTime)
 524:Generated_Source\PSoC4/RTC.h **** {
 525:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 526:Generated_Source\PSoC4/RTC.h **** 
 527:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_MINUTES_MASK) >> RTC_10_MINUTES_OFFSET) * 10u;
 528:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_MINUTES_MASK) >> RTC_MINUTES_OFFSET;
 529:Generated_Source\PSoC4/RTC.h **** 
 530:Generated_Source\PSoC4/RTC.h ****     return (retVal);
 531:Generated_Source\PSoC4/RTC.h **** }
 532:Generated_Source\PSoC4/RTC.h **** 
 533:Generated_Source\PSoC4/RTC.h **** 
 534:Generated_Source\PSoC4/RTC.h **** /*******************************************************************************
 535:Generated_Source\PSoC4/RTC.h **** * Function Name: RTC_GetHours
 536:Generated_Source\PSoC4/RTC.h **** ****************************************************************************//**
 537:Generated_Source\PSoC4/RTC.h **** *
 538:Generated_Source\PSoC4/RTC.h **** * \brief
 539:Generated_Source\PSoC4/RTC.h **** *  Returns the hours value from the time value that is passed as a/the parameter.
 540:Generated_Source\PSoC4/RTC.h **** *
 541:Generated_Source\PSoC4/RTC.h **** * \param
 542:Generated_Source\PSoC4/RTC.h **** *  time The time value.
 543:Generated_Source\PSoC4/RTC.h **** *
 544:Generated_Source\PSoC4/RTC.h **** * \return
 545:Generated_Source\PSoC4/RTC.h **** *  The hours value.
 546:Generated_Source\PSoC4/RTC.h **** *
 547:Generated_Source\PSoC4/RTC.h **** *******************************************************************************/
 548:Generated_Source\PSoC4/RTC.h **** static CY_INLINE uint32 RTC_GetHours(uint32 inputTime)
 549:Generated_Source\PSoC4/RTC.h **** {
 550:Generated_Source\PSoC4/RTC.h ****     uint32 retVal;
 551:Generated_Source\PSoC4/RTC.h **** 
 552:Generated_Source\PSoC4/RTC.h ****     retVal  = ((inputTime & RTC_10_HOURS_MASK) >> RTC_10_HOURS_OFFSET) * 10u;
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 12


  55              		.loc 2 552 0
  56 0018 030D     		lsrs	r3, r0, #20
  57 001a 0322     		movs	r2, #3
  58 001c 1340     		ands	r3, r2
  59 001e 9A00     		lsls	r2, r3, #2
  60 0020 D318     		adds	r3, r2, r3
  61 0022 5A00     		lsls	r2, r3, #1
  62              	.LVL3:
 553:Generated_Source\PSoC4/RTC.h ****     retVal += (inputTime & RTC_HOURS_MASK) >> RTC_HOURS_OFFSET;
  63              		.loc 2 553 0
  64 0024 000C     		lsrs	r0, r0, #16
  65              	.LVL4:
  66 0026 0F24     		movs	r4, #15
  67 0028 2040     		ands	r0, r4
  68 002a 1418     		adds	r4, r2, r0
  69              	.LVL5:
  70              	.LBE7:
  71              	.LBE6:
  22:main.c        ****     sprintf(buffer, "Current hour: %d\r\n", hour);
  72              		.loc 1 22 0
  73 002c 2200     		movs	r2, r4
  74 002e 2649     		ldr	r1, .L7+8
  75 0030 2800     		movs	r0, r5
  76 0032 FFF7FEFF 		bl	sprintf
  77              	.LVL6:
  23:main.c        ****     UART_UartPutString(buffer);
  78              		.loc 1 23 0
  79 0036 2800     		movs	r0, r5
  80 0038 FFF7FEFF 		bl	UART_UartPutString
  81              	.LVL7:
  24:main.c        ****     
  25:main.c        ****     // Check whether hour is outside of designated time frame - if so, turn it off
  26:main.c        ****     if(hour < STARTING_HOUR || hour > ENDING_HOUR){
  82              		.loc 1 26 0
  83 003c 0A3C     		subs	r4, r4, #10
  84              	.LVL8:
  85 003e 0A2C     		cmp	r4, #10
  86 0040 14D9     		bls	.L6
  27:main.c        ****         sprintf(buffer, "Outside of timeframe\r\n");
  87              		.loc 1 27 0
  88 0042 1F4C     		ldr	r4, .L7
  89              	.LVL9:
  90 0044 1722     		movs	r2, #23
  91 0046 2149     		ldr	r1, .L7+12
  92 0048 2000     		movs	r0, r4
  93 004a FFF7FEFF 		bl	memcpy
  94              	.LVL10:
  28:main.c        ****         UART_UartPutString(buffer);
  95              		.loc 1 28 0
  96 004e 2000     		movs	r0, r4
  97 0050 FFF7FEFF 		bl	UART_UartPutString
  98              	.LVL11:
  29:main.c        ****         
  30:main.c        ****         Pin_LED_blue_Write(OFF);
  99              		.loc 1 30 0
 100 0054 0120     		movs	r0, #1
 101 0056 FFF7FEFF 		bl	Pin_LED_blue_Write
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 13


 102              	.LVL12:
 103 005a 30E0     		b	.L1
 104              	.LVL13:
 105              	.L4:
 106              	.LBB8:
 107              	.LBB9:
  31:main.c        ****     }
  32:main.c        ****     else {
  33:main.c        ****         int positive_measurements = NUMBER_OF_MEASUREMENTS;
  34:main.c        ****         // Make several measurements of the light sensor
  35:main.c        ****         for(int i = 0; i < NUMBER_OF_MEASUREMENTS; i++){
  36:main.c        ****             positive_measurements -= Pin_Light_Sensor_Read();
 108              		.loc 1 36 0 discriminator 3
 109 005c FFF7FEFF 		bl	Pin_Light_Sensor_Read
 110              	.LVL14:
 111 0060 2D1A     		subs	r5, r5, r0
 112              	.LVL15:
  37:main.c        ****             CyDelay(50);
 113              		.loc 1 37 0 discriminator 3
 114 0062 3220     		movs	r0, #50
 115 0064 FFF7FEFF 		bl	CyDelay
 116              	.LVL16:
  35:main.c        ****             positive_measurements -= Pin_Light_Sensor_Read();
 117              		.loc 1 35 0 discriminator 3
 118 0068 0134     		adds	r4, r4, #1
 119              	.LVL17:
 120 006a 01E0     		b	.L2
 121              	.LVL18:
 122              	.L6:
 123              	.LBE9:
 124              	.LBE8:
 125 006c 0024     		movs	r4, #0
 126              	.LVL19:
 127 006e 0A25     		movs	r5, #10
 128              	.L2:
 129              	.LVL20:
 130              	.LBB11:
 131              	.LBB10:
  35:main.c        ****             positive_measurements -= Pin_Light_Sensor_Read();
 132              		.loc 1 35 0 is_stmt 0 discriminator 1
 133 0070 092C     		cmp	r4, #9
 134 0072 F3DD     		ble	.L4
 135              	.LBE10:
  38:main.c        ****         }
  39:main.c        ****         sprintf(buffer, "Number of total measurements: %d\t Number of positive measurements: %d\r\n
 136              		.loc 1 39 0 is_stmt 1
 137 0074 124C     		ldr	r4, .L7
 138              	.LVL21:
 139 0076 2B00     		movs	r3, r5
 140 0078 0A22     		movs	r2, #10
 141 007a 1549     		ldr	r1, .L7+16
 142 007c 2000     		movs	r0, r4
 143 007e FFF7FEFF 		bl	sprintf
 144              	.LVL22:
  40:main.c        ****         UART_UartPutString(buffer);
 145              		.loc 1 40 0
 146 0082 2000     		movs	r0, r4
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 14


 147 0084 FFF7FEFF 		bl	UART_UartPutString
 148              	.LVL23:
  41:main.c        ****         
  42:main.c        ****         // If the light sensor catches not enough light, turn on the LED's
  43:main.c        ****         if (positive_measurements < NUMBER_OF_MEASUREMENTS/2)
 149              		.loc 1 43 0
 150 0088 042D     		cmp	r5, #4
 151 008a 0CDC     		bgt	.L5
  44:main.c        ****         {
  45:main.c        ****             sprintf(buffer, "Turning LEDs on\r\n");
 152              		.loc 1 45 0
 153 008c 0C4C     		ldr	r4, .L7
 154 008e 1222     		movs	r2, #18
 155 0090 1049     		ldr	r1, .L7+20
 156 0092 2000     		movs	r0, r4
 157 0094 FFF7FEFF 		bl	memcpy
 158              	.LVL24:
  46:main.c        ****             UART_UartPutString(buffer);
 159              		.loc 1 46 0
 160 0098 2000     		movs	r0, r4
 161 009a FFF7FEFF 		bl	UART_UartPutString
 162              	.LVL25:
  47:main.c        **** 
  48:main.c        ****             Pin_LED_blue_Write(ON);   
 163              		.loc 1 48 0
 164 009e 0020     		movs	r0, #0
 165 00a0 FFF7FEFF 		bl	Pin_LED_blue_Write
 166              	.LVL26:
 167 00a4 0BE0     		b	.L1
 168              	.L5:
  49:main.c        ****         } 
  50:main.c        ****         // Else turn them off
  51:main.c        ****         else 
  52:main.c        ****         {
  53:main.c        ****             sprintf(buffer, "Turning LEDs off\r\n");
 169              		.loc 1 53 0
 170 00a6 064C     		ldr	r4, .L7
 171 00a8 1322     		movs	r2, #19
 172 00aa 0B49     		ldr	r1, .L7+24
 173 00ac 2000     		movs	r0, r4
 174 00ae FFF7FEFF 		bl	memcpy
 175              	.LVL27:
  54:main.c        ****             UART_UartPutString(buffer);
 176              		.loc 1 54 0
 177 00b2 2000     		movs	r0, r4
 178 00b4 FFF7FEFF 		bl	UART_UartPutString
 179              	.LVL28:
  55:main.c        ****             
  56:main.c        ****             Pin_LED_blue_Write(OFF);
 180              		.loc 1 56 0
 181 00b8 0120     		movs	r0, #1
 182 00ba FFF7FEFF 		bl	Pin_LED_blue_Write
 183              	.LVL29:
 184              	.L1:
 185              	.LBE11:
  57:main.c        ****         }
  58:main.c        ****     }
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 15


  59:main.c        **** }
 186              		.loc 1 59 0
 187              		@ sp needed
 188 00be 70BD     		pop	{r4, r5, r6, pc}
 189              	.L8:
 190              		.align	2
 191              	.L7:
 192 00c0 00000000 		.word	buffer
 193 00c4 00000000 		.word	.LC1
 194 00c8 14000000 		.word	.LC3
 195 00cc 28000000 		.word	.LC5
 196 00d0 40000000 		.word	.LC7
 197 00d4 88000000 		.word	.LC9
 198 00d8 9C000000 		.word	.LC11
 199              		.cfi_endproc
 200              	.LFE62:
 201              		.size	checkLight, .-checkLight
 202              		.section	.text.Pin_Light_Sensor_Handler,"ax",%progbits
 203              		.align	2
 204              		.global	Pin_Light_Sensor_Handler
 205              		.code	16
 206              		.thumb_func
 207              		.type	Pin_Light_Sensor_Handler, %function
 208              	Pin_Light_Sensor_Handler:
 209              	.LFB64:
  60:main.c        **** 
  61:main.c        **** void checkMoisture()
  62:main.c        **** {
  63:main.c        ****     sprintf(buffer, "Checking moisture\r\n");
  64:main.c        ****     UART_UartPutString(buffer);
  65:main.c        ****     int positive_measurements = NUMBER_OF_MEASUREMENTS;
  66:main.c        ****     // Make several measurements of the moisture sensor
  67:main.c        ****     for(int i = 0; i < NUMBER_OF_MEASUREMENTS; i++){
  68:main.c        ****         positive_measurements -= Pin_Moisture_Sensor_Read();
  69:main.c        ****         CyDelay(50);
  70:main.c        ****     }
  71:main.c        ****     sprintf(buffer, "Number of total measurements: %d\t Number of positive measurements: %d\r\n", N
  72:main.c        ****     UART_UartPutString(buffer);
  73:main.c        **** 
  74:main.c        ****     // If the ground isn't wet enough, water the plant for a specified amount of time
  75:main.c        ****     if (positive_measurements < NUMBER_OF_MEASUREMENTS/2)
  76:main.c        ****     {
  77:main.c        ****         // Turn pump on
  78:main.c        ****         sprintf(buffer, "Turning pump on\r\n");
  79:main.c        ****         UART_UartPutString(buffer);
  80:main.c        ****         Pin_pump_Write(ON);
  81:main.c        ****         // Wait for specified amount of watering time
  82:main.c        ****         CyDelay(WATERING_TIME_IN_SEC * 1000);
  83:main.c        ****         // Turn pump off
  84:main.c        ****         sprintf(buffer, "Turning pump off\r\n");
  85:main.c        ****         UART_UartPutString(buffer);
  86:main.c        ****         Pin_pump_Write(OFF);
  87:main.c        ****     }
  88:main.c        **** }
  89:main.c        **** 
  90:main.c        **** CY_ISR(Pin_Light_Sensor_Handler)
  91:main.c        **** {
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 16


 210              		.loc 1 91 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
  92:main.c        ****     sprintf(buffer, "Waking up again\r\n");
 218              		.loc 1 92 0
 219 0002 074C     		ldr	r4, .L10
 220 0004 1222     		movs	r2, #18
 221 0006 0749     		ldr	r1, .L10+4
 222 0008 2000     		movs	r0, r4
 223 000a FFF7FEFF 		bl	memcpy
 224              	.LVL30:
  93:main.c        ****     UART_UartPutString(buffer);
 225              		.loc 1 93 0
 226 000e 2000     		movs	r0, r4
 227 0010 FFF7FEFF 		bl	UART_UartPutString
 228              	.LVL31:
  94:main.c        ****     
  95:main.c        ****     checkLight();
 229              		.loc 1 95 0
 230 0014 FFF7FEFF 		bl	checkLight
 231              	.LVL32:
  96:main.c        ****     
  97:main.c        ****     Pin_Light_Sensor_ClearInterrupt();
 232              		.loc 1 97 0
 233 0018 FFF7FEFF 		bl	Pin_Light_Sensor_ClearInterrupt
 234              	.LVL33:
  98:main.c        **** }
 235              		.loc 1 98 0
 236              		@ sp needed
 237 001c 10BD     		pop	{r4, pc}
 238              	.L11:
 239 001e C046     		.align	2
 240              	.L10:
 241 0020 00000000 		.word	buffer
 242 0024 B0000000 		.word	.LC14
 243              		.cfi_endproc
 244              	.LFE64:
 245              		.size	Pin_Light_Sensor_Handler, .-Pin_Light_Sensor_Handler
 246              		.section	.text.checkMoisture,"ax",%progbits
 247              		.align	2
 248              		.global	checkMoisture
 249              		.code	16
 250              		.thumb_func
 251              		.type	checkMoisture, %function
 252              	checkMoisture:
 253              	.LFB63:
  62:main.c        ****     sprintf(buffer, "Checking moisture\r\n");
 254              		.loc 1 62 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 17


 259              		.cfi_def_cfa_offset 16
 260              		.cfi_offset 4, -16
 261              		.cfi_offset 5, -12
 262              		.cfi_offset 6, -8
 263              		.cfi_offset 14, -4
  63:main.c        ****     UART_UartPutString(buffer);
 264              		.loc 1 63 0
 265 0002 1E4C     		ldr	r4, .L16
 266 0004 1422     		movs	r2, #20
 267 0006 1E49     		ldr	r1, .L16+4
 268 0008 2000     		movs	r0, r4
 269 000a FFF7FEFF 		bl	memcpy
 270              	.LVL34:
  64:main.c        ****     int positive_measurements = NUMBER_OF_MEASUREMENTS;
 271              		.loc 1 64 0
 272 000e 2000     		movs	r0, r4
 273 0010 FFF7FEFF 		bl	UART_UartPutString
 274              	.LVL35:
 275              	.LBB12:
  67:main.c        ****         positive_measurements -= Pin_Moisture_Sensor_Read();
 276              		.loc 1 67 0
 277 0014 0024     		movs	r4, #0
 278              	.LBE12:
  65:main.c        ****     // Make several measurements of the moisture sensor
 279              		.loc 1 65 0
 280 0016 0A25     		movs	r5, #10
 281              	.LBB13:
  67:main.c        ****         positive_measurements -= Pin_Moisture_Sensor_Read();
 282              		.loc 1 67 0
 283 0018 06E0     		b	.L13
 284              	.LVL36:
 285              	.L14:
  68:main.c        ****         CyDelay(50);
 286              		.loc 1 68 0 discriminator 3
 287 001a FFF7FEFF 		bl	Pin_Moisture_Sensor_Read
 288              	.LVL37:
 289 001e 2D1A     		subs	r5, r5, r0
 290              	.LVL38:
  69:main.c        ****     }
 291              		.loc 1 69 0 discriminator 3
 292 0020 3220     		movs	r0, #50
 293 0022 FFF7FEFF 		bl	CyDelay
 294              	.LVL39:
  67:main.c        ****         positive_measurements -= Pin_Moisture_Sensor_Read();
 295              		.loc 1 67 0 discriminator 3
 296 0026 0134     		adds	r4, r4, #1
 297              	.LVL40:
 298              	.L13:
  67:main.c        ****         positive_measurements -= Pin_Moisture_Sensor_Read();
 299              		.loc 1 67 0 is_stmt 0 discriminator 1
 300 0028 092C     		cmp	r4, #9
 301 002a F6DD     		ble	.L14
 302              	.LBE13:
  71:main.c        ****     UART_UartPutString(buffer);
 303              		.loc 1 71 0 is_stmt 1
 304 002c 134C     		ldr	r4, .L16
 305              	.LVL41:
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 18


 306 002e 2B00     		movs	r3, r5
 307 0030 0A22     		movs	r2, #10
 308 0032 1449     		ldr	r1, .L16+8
 309 0034 2000     		movs	r0, r4
 310 0036 FFF7FEFF 		bl	sprintf
 311              	.LVL42:
  72:main.c        **** 
 312              		.loc 1 72 0
 313 003a 2000     		movs	r0, r4
 314 003c FFF7FEFF 		bl	UART_UartPutString
 315              	.LVL43:
  75:main.c        ****     {
 316              		.loc 1 75 0
 317 0040 042D     		cmp	r5, #4
 318 0042 1ADC     		bgt	.L12
  78:main.c        ****         UART_UartPutString(buffer);
 319              		.loc 1 78 0
 320 0044 0D4C     		ldr	r4, .L16
 321 0046 1222     		movs	r2, #18
 322 0048 0F49     		ldr	r1, .L16+12
 323 004a 2000     		movs	r0, r4
 324 004c FFF7FEFF 		bl	memcpy
 325              	.LVL44:
  79:main.c        ****         Pin_pump_Write(ON);
 326              		.loc 1 79 0
 327 0050 2000     		movs	r0, r4
 328 0052 FFF7FEFF 		bl	UART_UartPutString
 329              	.LVL45:
  80:main.c        ****         // Wait for specified amount of watering time
 330              		.loc 1 80 0
 331 0056 0020     		movs	r0, #0
 332 0058 FFF7FEFF 		bl	Pin_pump_Write
 333              	.LVL46:
  82:main.c        ****         // Turn pump off
 334              		.loc 1 82 0
 335 005c FA20     		movs	r0, #250
 336 005e 8000     		lsls	r0, r0, #2
 337 0060 FFF7FEFF 		bl	CyDelay
 338              	.LVL47:
  84:main.c        ****         UART_UartPutString(buffer);
 339              		.loc 1 84 0
 340 0064 1322     		movs	r2, #19
 341 0066 0949     		ldr	r1, .L16+16
 342 0068 2000     		movs	r0, r4
 343 006a FFF7FEFF 		bl	memcpy
 344              	.LVL48:
  85:main.c        ****         Pin_pump_Write(OFF);
 345              		.loc 1 85 0
 346 006e 2000     		movs	r0, r4
 347 0070 FFF7FEFF 		bl	UART_UartPutString
 348              	.LVL49:
  86:main.c        ****     }
 349              		.loc 1 86 0
 350 0074 0120     		movs	r0, #1
 351 0076 FFF7FEFF 		bl	Pin_pump_Write
 352              	.LVL50:
 353              	.L12:
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 19


  88:main.c        **** 
 354              		.loc 1 88 0
 355              		@ sp needed
 356              	.LVL51:
 357 007a 70BD     		pop	{r4, r5, r6, pc}
 358              	.L17:
 359              		.align	2
 360              	.L16:
 361 007c 00000000 		.word	buffer
 362 0080 C4000000 		.word	.LC17
 363 0084 40000000 		.word	.LC7
 364 0088 D8000000 		.word	.LC20
 365 008c EC000000 		.word	.LC22
 366              		.cfi_endproc
 367              	.LFE63:
 368              		.size	checkMoisture, .-checkMoisture
 369              		.section	.text.Pin_Moisture_Sensor_Handler,"ax",%progbits
 370              		.align	2
 371              		.global	Pin_Moisture_Sensor_Handler
 372              		.code	16
 373              		.thumb_func
 374              		.type	Pin_Moisture_Sensor_Handler, %function
 375              	Pin_Moisture_Sensor_Handler:
 376              	.LFB65:
  99:main.c        **** 
 100:main.c        **** CY_ISR(Pin_Moisture_Sensor_Handler)
 101:main.c        **** {
 377              		.loc 1 101 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 10B5     		push	{r4, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 4, -8
 384              		.cfi_offset 14, -4
 102:main.c        ****     sprintf(buffer, "Waking up again\r\n");
 385              		.loc 1 102 0
 386 0002 074C     		ldr	r4, .L19
 387 0004 1222     		movs	r2, #18
 388 0006 0749     		ldr	r1, .L19+4
 389 0008 2000     		movs	r0, r4
 390 000a FFF7FEFF 		bl	memcpy
 391              	.LVL52:
 103:main.c        ****     UART_UartPutString(buffer);
 392              		.loc 1 103 0
 393 000e 2000     		movs	r0, r4
 394 0010 FFF7FEFF 		bl	UART_UartPutString
 395              	.LVL53:
 104:main.c        ****     
 105:main.c        ****     checkMoisture();
 396              		.loc 1 105 0
 397 0014 FFF7FEFF 		bl	checkMoisture
 398              	.LVL54:
 106:main.c        ****     
 107:main.c        ****     Pin_Moisture_Sensor_ClearInterrupt();
 399              		.loc 1 107 0
 400 0018 FFF7FEFF 		bl	Pin_Moisture_Sensor_ClearInterrupt
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 20


 401              	.LVL55:
 108:main.c        **** }
 402              		.loc 1 108 0
 403              		@ sp needed
 404 001c 10BD     		pop	{r4, pc}
 405              	.L20:
 406 001e C046     		.align	2
 407              	.L19:
 408 0020 00000000 		.word	buffer
 409 0024 B0000000 		.word	.LC14
 410              		.cfi_endproc
 411              	.LFE65:
 412              		.size	Pin_Moisture_Sensor_Handler, .-Pin_Moisture_Sensor_Handler
 413              		.section	.text.main,"ax",%progbits
 414              		.align	2
 415              		.global	main
 416              		.code	16
 417              		.thumb_func
 418              		.type	main, %function
 419              	main:
 420              	.LFB66:
 109:main.c        **** 
 110:main.c        **** int main(void)
 111:main.c        **** {
 421              		.loc 1 111 0
 422              		.cfi_startproc
 423              		@ Volatile: function does not return.
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426 0000 10B5     		push	{r4, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 4, -8
 429              		.cfi_offset 14, -4
 112:main.c        ****     /* Enable global interrupts. */   
 113:main.c        ****     CyGlobalIntEnable; 
 430              		.loc 1 113 0
 431              		.syntax divided
 432              	@ 113 "main.c" 1
 433 0002 62B6     		CPSIE   i
 434              	@ 0 "" 2
 114:main.c        **** 
 115:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
 116:main.c        ****     UART_Start();
 435              		.loc 1 116 0
 436              		.thumb
 437              		.syntax unified
 438 0004 FFF7FEFF 		bl	UART_Start
 439              	.LVL56:
 117:main.c        ****     RTC_Start();
 440              		.loc 1 117 0
 441 0008 FFF7FEFF 		bl	RTC_Start
 442              	.LVL57:
 118:main.c        ****     Pin_Light_Sensor_int_StartEx(Pin_Light_Sensor_Handler);
 443              		.loc 1 118 0
 444 000c 1048     		ldr	r0, .L23
 445 000e FFF7FEFF 		bl	Pin_Light_Sensor_int_StartEx
 446              	.LVL58:
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 21


 119:main.c        ****     Pin_Moisture_Sensor_int_StartEx(Pin_Moisture_Sensor_Handler);
 447              		.loc 1 119 0
 448 0012 1048     		ldr	r0, .L23+4
 449 0014 FFF7FEFF 		bl	Pin_Moisture_Sensor_int_StartEx
 450              	.LVL59:
 120:main.c        ****     
 121:main.c        ****     sprintf(buffer, "Let's go\r\n");
 451              		.loc 1 121 0
 452 0018 0F4C     		ldr	r4, .L23+8
 453 001a 0B22     		movs	r2, #11
 454 001c 0F49     		ldr	r1, .L23+12
 455 001e 2000     		movs	r0, r4
 456 0020 FFF7FEFF 		bl	memcpy
 457              	.LVL60:
 122:main.c        ****     UART_UartPutString(buffer);
 458              		.loc 1 122 0
 459 0024 2000     		movs	r0, r4
 460 0026 FFF7FEFF 		bl	UART_UartPutString
 461              	.LVL61:
 123:main.c        ****     
 124:main.c        ****     Pin_LED_blue_Write(OFF);
 462              		.loc 1 124 0
 463 002a 0120     		movs	r0, #1
 464 002c FFF7FEFF 		bl	Pin_LED_blue_Write
 465              	.LVL62:
 125:main.c        ****     Pin_pump_Write(OFF);
 466              		.loc 1 125 0
 467 0030 0120     		movs	r0, #1
 468 0032 FFF7FEFF 		bl	Pin_pump_Write
 469              	.LVL63:
 470              	.L22:
 126:main.c        ****     
 127:main.c        ****     for(;;)
 128:main.c        ****     {
 129:main.c        ****         sprintf(buffer, "Going to sleep until interrupt\r\n");
 471              		.loc 1 129 0 discriminator 1
 472 0036 084C     		ldr	r4, .L23+8
 473 0038 2122     		movs	r2, #33
 474 003a 0949     		ldr	r1, .L23+16
 475 003c 2000     		movs	r0, r4
 476 003e FFF7FEFF 		bl	memcpy
 477              	.LVL64:
 130:main.c        ****         UART_UartPutString(buffer);
 478              		.loc 1 130 0 discriminator 1
 479 0042 2000     		movs	r0, r4
 480 0044 FFF7FEFF 		bl	UART_UartPutString
 481              	.LVL65:
 131:main.c        ****         
 132:main.c        ****         CySysPmSleep();
 482              		.loc 1 132 0 discriminator 1
 483 0048 FFF7FEFF 		bl	CySysPmSleep
 484              	.LVL66:
 485 004c F3E7     		b	.L22
 486              	.L24:
 487 004e C046     		.align	2
 488              	.L23:
 489 0050 00000000 		.word	Pin_Light_Sensor_Handler
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 22


 490 0054 00000000 		.word	Pin_Moisture_Sensor_Handler
 491 0058 00000000 		.word	buffer
 492 005c 00010000 		.word	.LC29
 493 0060 0C010000 		.word	.LC31
 494              		.cfi_endproc
 495              	.LFE66:
 496              		.size	main, .-main
 497              		.comm	buffer,256,4
 498              		.section	.rodata.str1.4,"aMS",%progbits,1
 499              		.align	2
 500              	.LC1:
 501 0000 43686563 		.ascii	"Checking light\015\012\000"
 501      6B696E67 
 501      206C6967 
 501      68740D0A 
 501      00
 502 0011 000000   		.space	3
 503              	.LC3:
 504 0014 43757272 		.ascii	"Current hour: %d\015\012\000"
 504      656E7420 
 504      686F7572 
 504      3A202564 
 504      0D0A00
 505 0027 00       		.space	1
 506              	.LC5:
 507 0028 4F757473 		.ascii	"Outside of timeframe\015\012\000"
 507      69646520 
 507      6F662074 
 507      696D6566 
 507      72616D65 
 508 003f 00       		.space	1
 509              	.LC7:
 510 0040 4E756D62 		.ascii	"Number of total measurements: %d\011 Number of posi"
 510      6572206F 
 510      6620746F 
 510      74616C20 
 510      6D656173 
 511 0070 74697665 		.ascii	"tive measurements: %d\015\012\000"
 511      206D6561 
 511      73757265 
 511      6D656E74 
 511      733A2025 
 512              	.LC9:
 513 0088 5475726E 		.ascii	"Turning LEDs on\015\012\000"
 513      696E6720 
 513      4C454473 
 513      206F6E0D 
 513      0A00
 514 009a 0000     		.space	2
 515              	.LC11:
 516 009c 5475726E 		.ascii	"Turning LEDs off\015\012\000"
 516      696E6720 
 516      4C454473 
 516      206F6666 
 516      0D0A00
 517 00af 00       		.space	1
 518              	.LC14:
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 23


 519 00b0 57616B69 		.ascii	"Waking up again\015\012\000"
 519      6E672075 
 519      70206167 
 519      61696E0D 
 519      0A00
 520 00c2 0000     		.space	2
 521              	.LC17:
 522 00c4 43686563 		.ascii	"Checking moisture\015\012\000"
 522      6B696E67 
 522      206D6F69 
 522      73747572 
 522      650D0A00 
 523              	.LC20:
 524 00d8 5475726E 		.ascii	"Turning pump on\015\012\000"
 524      696E6720 
 524      70756D70 
 524      206F6E0D 
 524      0A00
 525 00ea 0000     		.space	2
 526              	.LC22:
 527 00ec 5475726E 		.ascii	"Turning pump off\015\012\000"
 527      696E6720 
 527      70756D70 
 527      206F6666 
 527      0D0A00
 528 00ff 00       		.space	1
 529              	.LC29:
 530 0100 4C657427 		.ascii	"Let's go\015\012\000"
 530      7320676F 
 530      0D0A00
 531 010b 00       		.space	1
 532              	.LC31:
 533 010c 476F696E 		.ascii	"Going to sleep until interrupt\015\012\000"
 533      6720746F 
 533      20736C65 
 533      65702075 
 533      6E74696C 
 534              		.text
 535              	.Letext0:
 536              		.file 3 "Generated_Source\\PSoC4/Pin_Light_Sensor.h"
 537              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 538              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 539              		.file 6 "Generated_Source\\PSoC4/UART_SPI_UART.h"
 540              		.file 7 "Generated_Source\\PSoC4/Pin_LED_blue.h"
 541              		.file 8 "Generated_Source\\PSoC4/Pin_Moisture_Sensor.h"
 542              		.file 9 "Generated_Source\\PSoC4/Pin_pump.h"
 543              		.file 10 "Generated_Source\\PSoC4/UART.h"
 544              		.file 11 "Generated_Source\\PSoC4/Pin_Light_Sensor_int.h"
 545              		.file 12 "Generated_Source\\PSoC4/Pin_Moisture_Sensor_int.h"
 546              		.file 13 "Generated_Source\\PSoC4/cyPm.h"
 547              		.file 14 "Generated_Source\\PSoC4/cytypes.h"
 548              		.section	.debug_info,"",%progbits
 549              	.Ldebug_info0:
 550 0000 D2060000 		.4byte	0x6d2
 551 0004 0400     		.2byte	0x4
 552 0006 00000000 		.4byte	.Ldebug_abbrev0
 553 000a 04       		.byte	0x4
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 24


 554 000b 01       		.uleb128 0x1
 555 000c 22020000 		.4byte	.LASF35
 556 0010 0C       		.byte	0xc
 557 0011 E0020000 		.4byte	.LASF36
 558 0015 2C010000 		.4byte	.LASF37
 559 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 560 001d 00000000 		.4byte	0
 561 0021 00000000 		.4byte	.Ldebug_line0
 562 0025 02       		.uleb128 0x2
 563 0026 01       		.byte	0x1
 564 0027 06       		.byte	0x6
 565 0028 45030000 		.4byte	.LASF0
 566 002c 02       		.uleb128 0x2
 567 002d 01       		.byte	0x1
 568 002e 08       		.byte	0x8
 569 002f 98000000 		.4byte	.LASF1
 570 0033 02       		.uleb128 0x2
 571 0034 02       		.byte	0x2
 572 0035 05       		.byte	0x5
 573 0036 F3020000 		.4byte	.LASF2
 574 003a 02       		.uleb128 0x2
 575 003b 02       		.byte	0x2
 576 003c 07       		.byte	0x7
 577 003d C2000000 		.4byte	.LASF3
 578 0041 02       		.uleb128 0x2
 579 0042 04       		.byte	0x4
 580 0043 05       		.byte	0x5
 581 0044 22030000 		.4byte	.LASF4
 582 0048 02       		.uleb128 0x2
 583 0049 04       		.byte	0x4
 584 004a 07       		.byte	0x7
 585 004b B0000000 		.4byte	.LASF5
 586 004f 02       		.uleb128 0x2
 587 0050 08       		.byte	0x8
 588 0051 05       		.byte	0x5
 589 0052 D2020000 		.4byte	.LASF6
 590 0056 02       		.uleb128 0x2
 591 0057 08       		.byte	0x8
 592 0058 07       		.byte	0x7
 593 0059 D7010000 		.4byte	.LASF7
 594 005d 03       		.uleb128 0x3
 595 005e 04       		.byte	0x4
 596 005f 05       		.byte	0x5
 597 0060 696E7400 		.ascii	"int\000"
 598 0064 02       		.uleb128 0x2
 599 0065 04       		.byte	0x4
 600 0066 07       		.byte	0x7
 601 0067 CA010000 		.4byte	.LASF8
 602 006b 04       		.uleb128 0x4
 603 006c A3010000 		.4byte	.LASF38
 604 0070 0E       		.byte	0xe
 605 0071 D401     		.2byte	0x1d4
 606 0073 48000000 		.4byte	0x48
 607 0077 02       		.uleb128 0x2
 608 0078 04       		.byte	0x4
 609 0079 04       		.byte	0x4
 610 007a 6B000000 		.4byte	.LASF9
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 25


 611 007e 02       		.uleb128 0x2
 612 007f 08       		.byte	0x8
 613 0080 04       		.byte	0x4
 614 0081 8A010000 		.4byte	.LASF10
 615 0085 02       		.uleb128 0x2
 616 0086 01       		.byte	0x1
 617 0087 08       		.byte	0x8
 618 0088 E7020000 		.4byte	.LASF11
 619 008c 02       		.uleb128 0x2
 620 008d 08       		.byte	0x8
 621 008e 04       		.byte	0x4
 622 008f 39030000 		.4byte	.LASF12
 623 0093 02       		.uleb128 0x2
 624 0094 04       		.byte	0x4
 625 0095 07       		.byte	0x7
 626 0096 C9020000 		.4byte	.LASF13
 627 009a 05       		.uleb128 0x5
 628 009b 91010000 		.4byte	.LASF39
 629 009f 02       		.byte	0x2
 630 00a0 2402     		.2byte	0x224
 631 00a2 6B000000 		.4byte	0x6b
 632 00a6 03       		.byte	0x3
 633 00a7 C4000000 		.4byte	0xc4
 634 00ab 06       		.uleb128 0x6
 635 00ac A6000000 		.4byte	.LASF40
 636 00b0 02       		.byte	0x2
 637 00b1 2402     		.2byte	0x224
 638 00b3 6B000000 		.4byte	0x6b
 639 00b7 07       		.uleb128 0x7
 640 00b8 51000000 		.4byte	.LASF41
 641 00bc 02       		.byte	0x2
 642 00bd 2602     		.2byte	0x226
 643 00bf 6B000000 		.4byte	0x6b
 644 00c3 00       		.byte	0
 645 00c4 08       		.uleb128 0x8
 646 00c5 04030000 		.4byte	.LASF16
 647 00c9 01       		.byte	0x1
 648 00ca 10       		.byte	0x10
 649 00cb 00000000 		.4byte	.LFB62
 650 00cf DC000000 		.4byte	.LFE62-.LFB62
 651 00d3 01       		.uleb128 0x1
 652 00d4 9C       		.byte	0x9c
 653 00d5 E7020000 		.4byte	0x2e7
 654 00d9 09       		.uleb128 0x9
 655 00da 07020000 		.4byte	.LASF14
 656 00de 01       		.byte	0x1
 657 00df 15       		.byte	0x15
 658 00e0 5D000000 		.4byte	0x5d
 659 00e4 00000000 		.4byte	.LLST0
 660 00e8 0A       		.uleb128 0xa
 661 00e9 9A000000 		.4byte	0x9a
 662 00ed 18000000 		.4byte	.LBB6
 663 00f1 14000000 		.4byte	.LBE6-.LBB6
 664 00f5 01       		.byte	0x1
 665 00f6 15       		.byte	0x15
 666 00f7 18010000 		.4byte	0x118
 667 00fb 0B       		.uleb128 0xb
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 26


 668 00fc AB000000 		.4byte	0xab
 669 0100 2D000000 		.4byte	.LLST1
 670 0104 0C       		.uleb128 0xc
 671 0105 18000000 		.4byte	.LBB7
 672 0109 14000000 		.4byte	.LBE7-.LBB7
 673 010d 0D       		.uleb128 0xd
 674 010e B7000000 		.4byte	0xb7
 675 0112 40000000 		.4byte	.LLST2
 676 0116 00       		.byte	0
 677 0117 00       		.byte	0
 678 0118 0E       		.uleb128 0xe
 679 0119 00000000 		.4byte	.Ldebug_ranges0+0
 680 011d 2B020000 		.4byte	0x22b
 681 0121 09       		.uleb128 0x9
 682 0122 30000000 		.4byte	.LASF15
 683 0126 01       		.byte	0x1
 684 0127 21       		.byte	0x21
 685 0128 5D000000 		.4byte	0x5d
 686 012c 53000000 		.4byte	.LLST3
 687 0130 0E       		.uleb128 0xe
 688 0131 18000000 		.4byte	.Ldebug_ranges0+0x18
 689 0135 60010000 		.4byte	0x160
 690 0139 0F       		.uleb128 0xf
 691 013a 6900     		.ascii	"i\000"
 692 013c 01       		.byte	0x1
 693 013d 23       		.byte	0x23
 694 013e 5D000000 		.4byte	0x5d
 695 0142 71000000 		.4byte	.LLST4
 696 0146 10       		.uleb128 0x10
 697 0147 60000000 		.4byte	.LVL14
 698 014b 24060000 		.4byte	0x624
 699 014f 11       		.uleb128 0x11
 700 0150 68000000 		.4byte	.LVL16
 701 0154 2F060000 		.4byte	0x62f
 702 0158 12       		.uleb128 0x12
 703 0159 01       		.uleb128 0x1
 704 015a 50       		.byte	0x50
 705 015b 02       		.uleb128 0x2
 706 015c 08       		.byte	0x8
 707 015d 32       		.byte	0x32
 708 015e 00       		.byte	0
 709 015f 00       		.byte	0
 710 0160 13       		.uleb128 0x13
 711 0161 82000000 		.4byte	.LVL22
 712 0165 3A060000 		.4byte	0x63a
 713 0169 88010000 		.4byte	0x188
 714 016d 12       		.uleb128 0x12
 715 016e 01       		.uleb128 0x1
 716 016f 50       		.byte	0x50
 717 0170 02       		.uleb128 0x2
 718 0171 74       		.byte	0x74
 719 0172 00       		.sleb128 0
 720 0173 12       		.uleb128 0x12
 721 0174 01       		.uleb128 0x1
 722 0175 51       		.byte	0x51
 723 0176 05       		.uleb128 0x5
 724 0177 03       		.byte	0x3
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 27


 725 0178 40000000 		.4byte	.LC7
 726 017c 12       		.uleb128 0x12
 727 017d 01       		.uleb128 0x1
 728 017e 52       		.byte	0x52
 729 017f 01       		.uleb128 0x1
 730 0180 3A       		.byte	0x3a
 731 0181 12       		.uleb128 0x12
 732 0182 01       		.uleb128 0x1
 733 0183 53       		.byte	0x53
 734 0184 02       		.uleb128 0x2
 735 0185 75       		.byte	0x75
 736 0186 00       		.sleb128 0
 737 0187 00       		.byte	0
 738 0188 13       		.uleb128 0x13
 739 0189 88000000 		.4byte	.LVL23
 740 018d 45060000 		.4byte	0x645
 741 0191 9C010000 		.4byte	0x19c
 742 0195 12       		.uleb128 0x12
 743 0196 01       		.uleb128 0x1
 744 0197 50       		.byte	0x50
 745 0198 02       		.uleb128 0x2
 746 0199 74       		.byte	0x74
 747 019a 00       		.sleb128 0
 748 019b 00       		.byte	0
 749 019c 13       		.uleb128 0x13
 750 019d 98000000 		.4byte	.LVL24
 751 01a1 51060000 		.4byte	0x651
 752 01a5 BE010000 		.4byte	0x1be
 753 01a9 12       		.uleb128 0x12
 754 01aa 01       		.uleb128 0x1
 755 01ab 50       		.byte	0x50
 756 01ac 02       		.uleb128 0x2
 757 01ad 74       		.byte	0x74
 758 01ae 00       		.sleb128 0
 759 01af 12       		.uleb128 0x12
 760 01b0 01       		.uleb128 0x1
 761 01b1 51       		.byte	0x51
 762 01b2 05       		.uleb128 0x5
 763 01b3 03       		.byte	0x3
 764 01b4 88000000 		.4byte	.LC9
 765 01b8 12       		.uleb128 0x12
 766 01b9 01       		.uleb128 0x1
 767 01ba 52       		.byte	0x52
 768 01bb 01       		.uleb128 0x1
 769 01bc 42       		.byte	0x42
 770 01bd 00       		.byte	0
 771 01be 13       		.uleb128 0x13
 772 01bf 9E000000 		.4byte	.LVL25
 773 01c3 45060000 		.4byte	0x645
 774 01c7 D2010000 		.4byte	0x1d2
 775 01cb 12       		.uleb128 0x12
 776 01cc 01       		.uleb128 0x1
 777 01cd 50       		.byte	0x50
 778 01ce 02       		.uleb128 0x2
 779 01cf 74       		.byte	0x74
 780 01d0 00       		.sleb128 0
 781 01d1 00       		.byte	0
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 28


 782 01d2 13       		.uleb128 0x13
 783 01d3 A4000000 		.4byte	.LVL26
 784 01d7 5A060000 		.4byte	0x65a
 785 01db E5010000 		.4byte	0x1e5
 786 01df 12       		.uleb128 0x12
 787 01e0 01       		.uleb128 0x1
 788 01e1 50       		.byte	0x50
 789 01e2 01       		.uleb128 0x1
 790 01e3 30       		.byte	0x30
 791 01e4 00       		.byte	0
 792 01e5 13       		.uleb128 0x13
 793 01e6 B2000000 		.4byte	.LVL27
 794 01ea 51060000 		.4byte	0x651
 795 01ee 07020000 		.4byte	0x207
 796 01f2 12       		.uleb128 0x12
 797 01f3 01       		.uleb128 0x1
 798 01f4 50       		.byte	0x50
 799 01f5 02       		.uleb128 0x2
 800 01f6 74       		.byte	0x74
 801 01f7 00       		.sleb128 0
 802 01f8 12       		.uleb128 0x12
 803 01f9 01       		.uleb128 0x1
 804 01fa 51       		.byte	0x51
 805 01fb 05       		.uleb128 0x5
 806 01fc 03       		.byte	0x3
 807 01fd 9C000000 		.4byte	.LC11
 808 0201 12       		.uleb128 0x12
 809 0202 01       		.uleb128 0x1
 810 0203 52       		.byte	0x52
 811 0204 01       		.uleb128 0x1
 812 0205 43       		.byte	0x43
 813 0206 00       		.byte	0
 814 0207 13       		.uleb128 0x13
 815 0208 B8000000 		.4byte	.LVL28
 816 020c 45060000 		.4byte	0x645
 817 0210 1B020000 		.4byte	0x21b
 818 0214 12       		.uleb128 0x12
 819 0215 01       		.uleb128 0x1
 820 0216 50       		.byte	0x50
 821 0217 02       		.uleb128 0x2
 822 0218 74       		.byte	0x74
 823 0219 00       		.sleb128 0
 824 021a 00       		.byte	0
 825 021b 11       		.uleb128 0x11
 826 021c BE000000 		.4byte	.LVL29
 827 0220 5A060000 		.4byte	0x65a
 828 0224 12       		.uleb128 0x12
 829 0225 01       		.uleb128 0x1
 830 0226 50       		.byte	0x50
 831 0227 01       		.uleb128 0x1
 832 0228 31       		.byte	0x31
 833 0229 00       		.byte	0
 834 022a 00       		.byte	0
 835 022b 13       		.uleb128 0x13
 836 022c 0E000000 		.4byte	.LVL0
 837 0230 51060000 		.4byte	0x651
 838 0234 4D020000 		.4byte	0x24d
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 29


 839 0238 12       		.uleb128 0x12
 840 0239 01       		.uleb128 0x1
 841 023a 50       		.byte	0x50
 842 023b 02       		.uleb128 0x2
 843 023c 75       		.byte	0x75
 844 023d 00       		.sleb128 0
 845 023e 12       		.uleb128 0x12
 846 023f 01       		.uleb128 0x1
 847 0240 51       		.byte	0x51
 848 0241 05       		.uleb128 0x5
 849 0242 03       		.byte	0x3
 850 0243 00000000 		.4byte	.LC1
 851 0247 12       		.uleb128 0x12
 852 0248 01       		.uleb128 0x1
 853 0249 52       		.byte	0x52
 854 024a 01       		.uleb128 0x1
 855 024b 41       		.byte	0x41
 856 024c 00       		.byte	0
 857 024d 13       		.uleb128 0x13
 858 024e 14000000 		.4byte	.LVL1
 859 0252 45060000 		.4byte	0x645
 860 0256 61020000 		.4byte	0x261
 861 025a 12       		.uleb128 0x12
 862 025b 01       		.uleb128 0x1
 863 025c 50       		.byte	0x50
 864 025d 02       		.uleb128 0x2
 865 025e 75       		.byte	0x75
 866 025f 00       		.sleb128 0
 867 0260 00       		.byte	0
 868 0261 10       		.uleb128 0x10
 869 0262 18000000 		.4byte	.LVL2
 870 0266 65060000 		.4byte	0x665
 871 026a 13       		.uleb128 0x13
 872 026b 36000000 		.4byte	.LVL6
 873 026f 3A060000 		.4byte	0x63a
 874 0273 8D020000 		.4byte	0x28d
 875 0277 12       		.uleb128 0x12
 876 0278 01       		.uleb128 0x1
 877 0279 50       		.byte	0x50
 878 027a 02       		.uleb128 0x2
 879 027b 75       		.byte	0x75
 880 027c 00       		.sleb128 0
 881 027d 12       		.uleb128 0x12
 882 027e 01       		.uleb128 0x1
 883 027f 51       		.byte	0x51
 884 0280 05       		.uleb128 0x5
 885 0281 03       		.byte	0x3
 886 0282 14000000 		.4byte	.LC3
 887 0286 12       		.uleb128 0x12
 888 0287 01       		.uleb128 0x1
 889 0288 52       		.byte	0x52
 890 0289 02       		.uleb128 0x2
 891 028a 74       		.byte	0x74
 892 028b 00       		.sleb128 0
 893 028c 00       		.byte	0
 894 028d 13       		.uleb128 0x13
 895 028e 3C000000 		.4byte	.LVL7
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 30


 896 0292 45060000 		.4byte	0x645
 897 0296 A1020000 		.4byte	0x2a1
 898 029a 12       		.uleb128 0x12
 899 029b 01       		.uleb128 0x1
 900 029c 50       		.byte	0x50
 901 029d 02       		.uleb128 0x2
 902 029e 75       		.byte	0x75
 903 029f 00       		.sleb128 0
 904 02a0 00       		.byte	0
 905 02a1 13       		.uleb128 0x13
 906 02a2 4E000000 		.4byte	.LVL10
 907 02a6 51060000 		.4byte	0x651
 908 02aa C3020000 		.4byte	0x2c3
 909 02ae 12       		.uleb128 0x12
 910 02af 01       		.uleb128 0x1
 911 02b0 50       		.byte	0x50
 912 02b1 02       		.uleb128 0x2
 913 02b2 75       		.byte	0x75
 914 02b3 00       		.sleb128 0
 915 02b4 12       		.uleb128 0x12
 916 02b5 01       		.uleb128 0x1
 917 02b6 51       		.byte	0x51
 918 02b7 05       		.uleb128 0x5
 919 02b8 03       		.byte	0x3
 920 02b9 28000000 		.4byte	.LC5
 921 02bd 12       		.uleb128 0x12
 922 02be 01       		.uleb128 0x1
 923 02bf 52       		.byte	0x52
 924 02c0 01       		.uleb128 0x1
 925 02c1 47       		.byte	0x47
 926 02c2 00       		.byte	0
 927 02c3 13       		.uleb128 0x13
 928 02c4 54000000 		.4byte	.LVL11
 929 02c8 45060000 		.4byte	0x645
 930 02cc D7020000 		.4byte	0x2d7
 931 02d0 12       		.uleb128 0x12
 932 02d1 01       		.uleb128 0x1
 933 02d2 50       		.byte	0x50
 934 02d3 02       		.uleb128 0x2
 935 02d4 75       		.byte	0x75
 936 02d5 00       		.sleb128 0
 937 02d6 00       		.byte	0
 938 02d7 11       		.uleb128 0x11
 939 02d8 5A000000 		.4byte	.LVL12
 940 02dc 5A060000 		.4byte	0x65a
 941 02e0 12       		.uleb128 0x12
 942 02e1 01       		.uleb128 0x1
 943 02e2 50       		.byte	0x50
 944 02e3 01       		.uleb128 0x1
 945 02e4 31       		.byte	0x31
 946 02e5 00       		.byte	0
 947 02e6 00       		.byte	0
 948 02e7 14       		.uleb128 0x14
 949 02e8 EE010000 		.4byte	.LASF18
 950 02ec 01       		.byte	0x1
 951 02ed 5A       		.byte	0x5a
 952 02ee 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 31


 953 02f2 28000000 		.4byte	.LFE64-.LFB64
 954 02f6 01       		.uleb128 0x1
 955 02f7 9C       		.byte	0x9c
 956 02f8 45030000 		.4byte	0x345
 957 02fc 13       		.uleb128 0x13
 958 02fd 0E000000 		.4byte	.LVL30
 959 0301 51060000 		.4byte	0x651
 960 0305 1E030000 		.4byte	0x31e
 961 0309 12       		.uleb128 0x12
 962 030a 01       		.uleb128 0x1
 963 030b 50       		.byte	0x50
 964 030c 02       		.uleb128 0x2
 965 030d 74       		.byte	0x74
 966 030e 00       		.sleb128 0
 967 030f 12       		.uleb128 0x12
 968 0310 01       		.uleb128 0x1
 969 0311 51       		.byte	0x51
 970 0312 05       		.uleb128 0x5
 971 0313 03       		.byte	0x3
 972 0314 B0000000 		.4byte	.LC14
 973 0318 12       		.uleb128 0x12
 974 0319 01       		.uleb128 0x1
 975 031a 52       		.byte	0x52
 976 031b 01       		.uleb128 0x1
 977 031c 42       		.byte	0x42
 978 031d 00       		.byte	0
 979 031e 13       		.uleb128 0x13
 980 031f 14000000 		.4byte	.LVL31
 981 0323 45060000 		.4byte	0x645
 982 0327 32030000 		.4byte	0x332
 983 032b 12       		.uleb128 0x12
 984 032c 01       		.uleb128 0x1
 985 032d 50       		.byte	0x50
 986 032e 02       		.uleb128 0x2
 987 032f 74       		.byte	0x74
 988 0330 00       		.sleb128 0
 989 0331 00       		.byte	0
 990 0332 10       		.uleb128 0x10
 991 0333 18000000 		.4byte	.LVL32
 992 0337 C4000000 		.4byte	0xc4
 993 033b 10       		.uleb128 0x10
 994 033c 1C000000 		.4byte	.LVL33
 995 0340 71060000 		.4byte	0x671
 996 0344 00       		.byte	0
 997 0345 08       		.uleb128 0x8
 998 0346 2B030000 		.4byte	.LASF17
 999 034a 01       		.byte	0x1
 1000 034b 3D       		.byte	0x3d
 1001 034c 00000000 		.4byte	.LFB63
 1002 0350 90000000 		.4byte	.LFE63-.LFB63
 1003 0354 01       		.uleb128 0x1
 1004 0355 9C       		.byte	0x9c
 1005 0356 AF040000 		.4byte	0x4af
 1006 035a 09       		.uleb128 0x9
 1007 035b 30000000 		.4byte	.LASF15
 1008 035f 01       		.byte	0x1
 1009 0360 41       		.byte	0x41
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 32


 1010 0361 5D000000 		.4byte	0x5d
 1011 0365 8F000000 		.4byte	.LLST5
 1012 0369 0E       		.uleb128 0xe
 1013 036a 30000000 		.4byte	.Ldebug_ranges0+0x30
 1014 036e 99030000 		.4byte	0x399
 1015 0372 0F       		.uleb128 0xf
 1016 0373 6900     		.ascii	"i\000"
 1017 0375 01       		.byte	0x1
 1018 0376 43       		.byte	0x43
 1019 0377 5D000000 		.4byte	0x5d
 1020 037b AE000000 		.4byte	.LLST6
 1021 037f 10       		.uleb128 0x10
 1022 0380 1E000000 		.4byte	.LVL37
 1023 0384 7C060000 		.4byte	0x67c
 1024 0388 11       		.uleb128 0x11
 1025 0389 26000000 		.4byte	.LVL39
 1026 038d 2F060000 		.4byte	0x62f
 1027 0391 12       		.uleb128 0x12
 1028 0392 01       		.uleb128 0x1
 1029 0393 50       		.byte	0x50
 1030 0394 02       		.uleb128 0x2
 1031 0395 08       		.byte	0x8
 1032 0396 32       		.byte	0x32
 1033 0397 00       		.byte	0
 1034 0398 00       		.byte	0
 1035 0399 13       		.uleb128 0x13
 1036 039a 0E000000 		.4byte	.LVL34
 1037 039e 51060000 		.4byte	0x651
 1038 03a2 BB030000 		.4byte	0x3bb
 1039 03a6 12       		.uleb128 0x12
 1040 03a7 01       		.uleb128 0x1
 1041 03a8 50       		.byte	0x50
 1042 03a9 02       		.uleb128 0x2
 1043 03aa 74       		.byte	0x74
 1044 03ab 00       		.sleb128 0
 1045 03ac 12       		.uleb128 0x12
 1046 03ad 01       		.uleb128 0x1
 1047 03ae 51       		.byte	0x51
 1048 03af 05       		.uleb128 0x5
 1049 03b0 03       		.byte	0x3
 1050 03b1 C4000000 		.4byte	.LC17
 1051 03b5 12       		.uleb128 0x12
 1052 03b6 01       		.uleb128 0x1
 1053 03b7 52       		.byte	0x52
 1054 03b8 01       		.uleb128 0x1
 1055 03b9 44       		.byte	0x44
 1056 03ba 00       		.byte	0
 1057 03bb 13       		.uleb128 0x13
 1058 03bc 14000000 		.4byte	.LVL35
 1059 03c0 45060000 		.4byte	0x645
 1060 03c4 CF030000 		.4byte	0x3cf
 1061 03c8 12       		.uleb128 0x12
 1062 03c9 01       		.uleb128 0x1
 1063 03ca 50       		.byte	0x50
 1064 03cb 02       		.uleb128 0x2
 1065 03cc 74       		.byte	0x74
 1066 03cd 00       		.sleb128 0
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 33


 1067 03ce 00       		.byte	0
 1068 03cf 13       		.uleb128 0x13
 1069 03d0 3A000000 		.4byte	.LVL42
 1070 03d4 3A060000 		.4byte	0x63a
 1071 03d8 F7030000 		.4byte	0x3f7
 1072 03dc 12       		.uleb128 0x12
 1073 03dd 01       		.uleb128 0x1
 1074 03de 50       		.byte	0x50
 1075 03df 02       		.uleb128 0x2
 1076 03e0 74       		.byte	0x74
 1077 03e1 00       		.sleb128 0
 1078 03e2 12       		.uleb128 0x12
 1079 03e3 01       		.uleb128 0x1
 1080 03e4 51       		.byte	0x51
 1081 03e5 05       		.uleb128 0x5
 1082 03e6 03       		.byte	0x3
 1083 03e7 40000000 		.4byte	.LC7
 1084 03eb 12       		.uleb128 0x12
 1085 03ec 01       		.uleb128 0x1
 1086 03ed 52       		.byte	0x52
 1087 03ee 01       		.uleb128 0x1
 1088 03ef 3A       		.byte	0x3a
 1089 03f0 12       		.uleb128 0x12
 1090 03f1 01       		.uleb128 0x1
 1091 03f2 53       		.byte	0x53
 1092 03f3 02       		.uleb128 0x2
 1093 03f4 75       		.byte	0x75
 1094 03f5 00       		.sleb128 0
 1095 03f6 00       		.byte	0
 1096 03f7 13       		.uleb128 0x13
 1097 03f8 40000000 		.4byte	.LVL43
 1098 03fc 45060000 		.4byte	0x645
 1099 0400 0B040000 		.4byte	0x40b
 1100 0404 12       		.uleb128 0x12
 1101 0405 01       		.uleb128 0x1
 1102 0406 50       		.byte	0x50
 1103 0407 02       		.uleb128 0x2
 1104 0408 74       		.byte	0x74
 1105 0409 00       		.sleb128 0
 1106 040a 00       		.byte	0
 1107 040b 13       		.uleb128 0x13
 1108 040c 50000000 		.4byte	.LVL44
 1109 0410 51060000 		.4byte	0x651
 1110 0414 2D040000 		.4byte	0x42d
 1111 0418 12       		.uleb128 0x12
 1112 0419 01       		.uleb128 0x1
 1113 041a 50       		.byte	0x50
 1114 041b 02       		.uleb128 0x2
 1115 041c 74       		.byte	0x74
 1116 041d 00       		.sleb128 0
 1117 041e 12       		.uleb128 0x12
 1118 041f 01       		.uleb128 0x1
 1119 0420 51       		.byte	0x51
 1120 0421 05       		.uleb128 0x5
 1121 0422 03       		.byte	0x3
 1122 0423 D8000000 		.4byte	.LC20
 1123 0427 12       		.uleb128 0x12
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 34


 1124 0428 01       		.uleb128 0x1
 1125 0429 52       		.byte	0x52
 1126 042a 01       		.uleb128 0x1
 1127 042b 42       		.byte	0x42
 1128 042c 00       		.byte	0
 1129 042d 13       		.uleb128 0x13
 1130 042e 56000000 		.4byte	.LVL45
 1131 0432 45060000 		.4byte	0x645
 1132 0436 41040000 		.4byte	0x441
 1133 043a 12       		.uleb128 0x12
 1134 043b 01       		.uleb128 0x1
 1135 043c 50       		.byte	0x50
 1136 043d 02       		.uleb128 0x2
 1137 043e 74       		.byte	0x74
 1138 043f 00       		.sleb128 0
 1139 0440 00       		.byte	0
 1140 0441 13       		.uleb128 0x13
 1141 0442 5C000000 		.4byte	.LVL46
 1142 0446 87060000 		.4byte	0x687
 1143 044a 54040000 		.4byte	0x454
 1144 044e 12       		.uleb128 0x12
 1145 044f 01       		.uleb128 0x1
 1146 0450 50       		.byte	0x50
 1147 0451 01       		.uleb128 0x1
 1148 0452 30       		.byte	0x30
 1149 0453 00       		.byte	0
 1150 0454 13       		.uleb128 0x13
 1151 0455 64000000 		.4byte	.LVL47
 1152 0459 2F060000 		.4byte	0x62f
 1153 045d 69040000 		.4byte	0x469
 1154 0461 12       		.uleb128 0x12
 1155 0462 01       		.uleb128 0x1
 1156 0463 50       		.byte	0x50
 1157 0464 03       		.uleb128 0x3
 1158 0465 0A       		.byte	0xa
 1159 0466 E803     		.2byte	0x3e8
 1160 0468 00       		.byte	0
 1161 0469 13       		.uleb128 0x13
 1162 046a 6E000000 		.4byte	.LVL48
 1163 046e 51060000 		.4byte	0x651
 1164 0472 8B040000 		.4byte	0x48b
 1165 0476 12       		.uleb128 0x12
 1166 0477 01       		.uleb128 0x1
 1167 0478 50       		.byte	0x50
 1168 0479 02       		.uleb128 0x2
 1169 047a 74       		.byte	0x74
 1170 047b 00       		.sleb128 0
 1171 047c 12       		.uleb128 0x12
 1172 047d 01       		.uleb128 0x1
 1173 047e 51       		.byte	0x51
 1174 047f 05       		.uleb128 0x5
 1175 0480 03       		.byte	0x3
 1176 0481 EC000000 		.4byte	.LC22
 1177 0485 12       		.uleb128 0x12
 1178 0486 01       		.uleb128 0x1
 1179 0487 52       		.byte	0x52
 1180 0488 01       		.uleb128 0x1
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 35


 1181 0489 43       		.byte	0x43
 1182 048a 00       		.byte	0
 1183 048b 13       		.uleb128 0x13
 1184 048c 74000000 		.4byte	.LVL49
 1185 0490 45060000 		.4byte	0x645
 1186 0494 9F040000 		.4byte	0x49f
 1187 0498 12       		.uleb128 0x12
 1188 0499 01       		.uleb128 0x1
 1189 049a 50       		.byte	0x50
 1190 049b 02       		.uleb128 0x2
 1191 049c 74       		.byte	0x74
 1192 049d 00       		.sleb128 0
 1193 049e 00       		.byte	0
 1194 049f 11       		.uleb128 0x11
 1195 04a0 7A000000 		.4byte	.LVL50
 1196 04a4 87060000 		.4byte	0x687
 1197 04a8 12       		.uleb128 0x12
 1198 04a9 01       		.uleb128 0x1
 1199 04aa 50       		.byte	0x50
 1200 04ab 01       		.uleb128 0x1
 1201 04ac 31       		.byte	0x31
 1202 04ad 00       		.byte	0
 1203 04ae 00       		.byte	0
 1204 04af 14       		.uleb128 0x14
 1205 04b0 D5000000 		.4byte	.LASF19
 1206 04b4 01       		.byte	0x1
 1207 04b5 64       		.byte	0x64
 1208 04b6 00000000 		.4byte	.LFB65
 1209 04ba 28000000 		.4byte	.LFE65-.LFB65
 1210 04be 01       		.uleb128 0x1
 1211 04bf 9C       		.byte	0x9c
 1212 04c0 0D050000 		.4byte	0x50d
 1213 04c4 13       		.uleb128 0x13
 1214 04c5 0E000000 		.4byte	.LVL52
 1215 04c9 51060000 		.4byte	0x651
 1216 04cd E6040000 		.4byte	0x4e6
 1217 04d1 12       		.uleb128 0x12
 1218 04d2 01       		.uleb128 0x1
 1219 04d3 50       		.byte	0x50
 1220 04d4 02       		.uleb128 0x2
 1221 04d5 74       		.byte	0x74
 1222 04d6 00       		.sleb128 0
 1223 04d7 12       		.uleb128 0x12
 1224 04d8 01       		.uleb128 0x1
 1225 04d9 51       		.byte	0x51
 1226 04da 05       		.uleb128 0x5
 1227 04db 03       		.byte	0x3
 1228 04dc B0000000 		.4byte	.LC14
 1229 04e0 12       		.uleb128 0x12
 1230 04e1 01       		.uleb128 0x1
 1231 04e2 52       		.byte	0x52
 1232 04e3 01       		.uleb128 0x1
 1233 04e4 42       		.byte	0x42
 1234 04e5 00       		.byte	0
 1235 04e6 13       		.uleb128 0x13
 1236 04e7 14000000 		.4byte	.LVL53
 1237 04eb 45060000 		.4byte	0x645
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 36


 1238 04ef FA040000 		.4byte	0x4fa
 1239 04f3 12       		.uleb128 0x12
 1240 04f4 01       		.uleb128 0x1
 1241 04f5 50       		.byte	0x50
 1242 04f6 02       		.uleb128 0x2
 1243 04f7 74       		.byte	0x74
 1244 04f8 00       		.sleb128 0
 1245 04f9 00       		.byte	0
 1246 04fa 10       		.uleb128 0x10
 1247 04fb 18000000 		.4byte	.LVL54
 1248 04ff 45030000 		.4byte	0x345
 1249 0503 10       		.uleb128 0x10
 1250 0504 1C000000 		.4byte	.LVL55
 1251 0508 92060000 		.4byte	0x692
 1252 050c 00       		.byte	0
 1253 050d 15       		.uleb128 0x15
 1254 050e 9E010000 		.4byte	.LASF42
 1255 0512 01       		.byte	0x1
 1256 0513 6E       		.byte	0x6e
 1257 0514 5D000000 		.4byte	0x5d
 1258 0518 00000000 		.4byte	.LFB66
 1259 051c 64000000 		.4byte	.LFE66-.LFB66
 1260 0520 01       		.uleb128 0x1
 1261 0521 9C       		.byte	0x9c
 1262 0522 03060000 		.4byte	0x603
 1263 0526 10       		.uleb128 0x10
 1264 0527 08000000 		.4byte	.LVL56
 1265 052b 9D060000 		.4byte	0x69d
 1266 052f 10       		.uleb128 0x10
 1267 0530 0C000000 		.4byte	.LVL57
 1268 0534 A8060000 		.4byte	0x6a8
 1269 0538 13       		.uleb128 0x13
 1270 0539 12000000 		.4byte	.LVL58
 1271 053d B4060000 		.4byte	0x6b4
 1272 0541 4F050000 		.4byte	0x54f
 1273 0545 12       		.uleb128 0x12
 1274 0546 01       		.uleb128 0x1
 1275 0547 50       		.byte	0x50
 1276 0548 05       		.uleb128 0x5
 1277 0549 03       		.byte	0x3
 1278 054a 00000000 		.4byte	Pin_Light_Sensor_Handler
 1279 054e 00       		.byte	0
 1280 054f 13       		.uleb128 0x13
 1281 0550 18000000 		.4byte	.LVL59
 1282 0554 BF060000 		.4byte	0x6bf
 1283 0558 66050000 		.4byte	0x566
 1284 055c 12       		.uleb128 0x12
 1285 055d 01       		.uleb128 0x1
 1286 055e 50       		.byte	0x50
 1287 055f 05       		.uleb128 0x5
 1288 0560 03       		.byte	0x3
 1289 0561 00000000 		.4byte	Pin_Moisture_Sensor_Handler
 1290 0565 00       		.byte	0
 1291 0566 13       		.uleb128 0x13
 1292 0567 24000000 		.4byte	.LVL60
 1293 056b 51060000 		.4byte	0x651
 1294 056f 88050000 		.4byte	0x588
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 37


 1295 0573 12       		.uleb128 0x12
 1296 0574 01       		.uleb128 0x1
 1297 0575 50       		.byte	0x50
 1298 0576 02       		.uleb128 0x2
 1299 0577 74       		.byte	0x74
 1300 0578 00       		.sleb128 0
 1301 0579 12       		.uleb128 0x12
 1302 057a 01       		.uleb128 0x1
 1303 057b 51       		.byte	0x51
 1304 057c 05       		.uleb128 0x5
 1305 057d 03       		.byte	0x3
 1306 057e 00010000 		.4byte	.LC29
 1307 0582 12       		.uleb128 0x12
 1308 0583 01       		.uleb128 0x1
 1309 0584 52       		.byte	0x52
 1310 0585 01       		.uleb128 0x1
 1311 0586 3B       		.byte	0x3b
 1312 0587 00       		.byte	0
 1313 0588 13       		.uleb128 0x13
 1314 0589 2A000000 		.4byte	.LVL61
 1315 058d 45060000 		.4byte	0x645
 1316 0591 9C050000 		.4byte	0x59c
 1317 0595 12       		.uleb128 0x12
 1318 0596 01       		.uleb128 0x1
 1319 0597 50       		.byte	0x50
 1320 0598 02       		.uleb128 0x2
 1321 0599 74       		.byte	0x74
 1322 059a 00       		.sleb128 0
 1323 059b 00       		.byte	0
 1324 059c 13       		.uleb128 0x13
 1325 059d 30000000 		.4byte	.LVL62
 1326 05a1 5A060000 		.4byte	0x65a
 1327 05a5 AF050000 		.4byte	0x5af
 1328 05a9 12       		.uleb128 0x12
 1329 05aa 01       		.uleb128 0x1
 1330 05ab 50       		.byte	0x50
 1331 05ac 01       		.uleb128 0x1
 1332 05ad 31       		.byte	0x31
 1333 05ae 00       		.byte	0
 1334 05af 13       		.uleb128 0x13
 1335 05b0 36000000 		.4byte	.LVL63
 1336 05b4 87060000 		.4byte	0x687
 1337 05b8 C2050000 		.4byte	0x5c2
 1338 05bc 12       		.uleb128 0x12
 1339 05bd 01       		.uleb128 0x1
 1340 05be 50       		.byte	0x50
 1341 05bf 01       		.uleb128 0x1
 1342 05c0 31       		.byte	0x31
 1343 05c1 00       		.byte	0
 1344 05c2 13       		.uleb128 0x13
 1345 05c3 42000000 		.4byte	.LVL64
 1346 05c7 51060000 		.4byte	0x651
 1347 05cb E5050000 		.4byte	0x5e5
 1348 05cf 12       		.uleb128 0x12
 1349 05d0 01       		.uleb128 0x1
 1350 05d1 50       		.byte	0x50
 1351 05d2 02       		.uleb128 0x2
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 38


 1352 05d3 74       		.byte	0x74
 1353 05d4 00       		.sleb128 0
 1354 05d5 12       		.uleb128 0x12
 1355 05d6 01       		.uleb128 0x1
 1356 05d7 51       		.byte	0x51
 1357 05d8 05       		.uleb128 0x5
 1358 05d9 03       		.byte	0x3
 1359 05da 0C010000 		.4byte	.LC31
 1360 05de 12       		.uleb128 0x12
 1361 05df 01       		.uleb128 0x1
 1362 05e0 52       		.byte	0x52
 1363 05e1 02       		.uleb128 0x2
 1364 05e2 08       		.byte	0x8
 1365 05e3 21       		.byte	0x21
 1366 05e4 00       		.byte	0
 1367 05e5 13       		.uleb128 0x13
 1368 05e6 48000000 		.4byte	.LVL65
 1369 05ea 45060000 		.4byte	0x645
 1370 05ee F9050000 		.4byte	0x5f9
 1371 05f2 12       		.uleb128 0x12
 1372 05f3 01       		.uleb128 0x1
 1373 05f4 50       		.byte	0x50
 1374 05f5 02       		.uleb128 0x2
 1375 05f6 74       		.byte	0x74
 1376 05f7 00       		.sleb128 0
 1377 05f8 00       		.byte	0
 1378 05f9 10       		.uleb128 0x10
 1379 05fa 4C000000 		.4byte	.LVL66
 1380 05fe CA060000 		.4byte	0x6ca
 1381 0602 00       		.byte	0
 1382 0603 16       		.uleb128 0x16
 1383 0604 85000000 		.4byte	0x85
 1384 0608 13060000 		.4byte	0x613
 1385 060c 17       		.uleb128 0x17
 1386 060d 93000000 		.4byte	0x93
 1387 0611 FF       		.byte	0xff
 1388 0612 00       		.byte	0
 1389 0613 18       		.uleb128 0x18
 1390 0614 FD020000 		.4byte	.LASF43
 1391 0618 01       		.byte	0x1
 1392 0619 0C       		.byte	0xc
 1393 061a 03060000 		.4byte	0x603
 1394 061e 05       		.uleb128 0x5
 1395 061f 03       		.byte	0x3
 1396 0620 00000000 		.4byte	buffer
 1397 0624 19       		.uleb128 0x19
 1398 0625 0C020000 		.4byte	.LASF20
 1399 0629 0C020000 		.4byte	.LASF20
 1400 062d 03       		.byte	0x3
 1401 062e 32       		.byte	0x32
 1402 062f 19       		.uleb128 0x19
 1403 0630 59030000 		.4byte	.LASF21
 1404 0634 59030000 		.4byte	.LASF21
 1405 0638 04       		.byte	0x4
 1406 0639 D9       		.byte	0xd9
 1407 063a 19       		.uleb128 0x19
 1408 063b 51030000 		.4byte	.LASF22
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 39


 1409 063f 51030000 		.4byte	.LASF22
 1410 0643 05       		.byte	0x5
 1411 0644 E7       		.byte	0xe7
 1412 0645 1A       		.uleb128 0x1a
 1413 0646 58000000 		.4byte	.LASF23
 1414 064a 58000000 		.4byte	.LASF23
 1415 064e 06       		.byte	0x6
 1416 064f 2103     		.2byte	0x321
 1417 0651 1B       		.uleb128 0x1b
 1418 0652 EC020000 		.4byte	.LASF44
 1419 0656 EC020000 		.4byte	.LASF44
 1420 065a 19       		.uleb128 0x19
 1421 065b 0F030000 		.4byte	.LASF24
 1422 065f 0F030000 		.4byte	.LASF24
 1423 0663 07       		.byte	0x7
 1424 0664 33       		.byte	0x33
 1425 0665 1A       		.uleb128 0x1a
 1426 0666 00010000 		.4byte	.LASF25
 1427 066a 00010000 		.4byte	.LASF25
 1428 066e 02       		.byte	0x2
 1429 066f 5801     		.2byte	0x158
 1430 0671 19       		.uleb128 0x19
 1431 0672 AA010000 		.4byte	.LASF26
 1432 0676 AA010000 		.4byte	.LASF26
 1433 067a 03       		.byte	0x3
 1434 067b 39       		.byte	0x39
 1435 067c 19       		.uleb128 0x19
 1436 067d B0020000 		.4byte	.LASF27
 1437 0681 B0020000 		.4byte	.LASF27
 1438 0685 08       		.byte	0x8
 1439 0686 32       		.byte	0x32
 1440 0687 19       		.uleb128 0x19
 1441 0688 F1000000 		.4byte	.LASF28
 1442 068c F1000000 		.4byte	.LASF28
 1443 0690 09       		.byte	0x9
 1444 0691 33       		.byte	0x33
 1445 0692 19       		.uleb128 0x19
 1446 0693 0D000000 		.4byte	.LASF29
 1447 0697 0D000000 		.4byte	.LASF29
 1448 069b 08       		.byte	0x8
 1449 069c 39       		.byte	0x39
 1450 069d 19       		.uleb128 0x19
 1451 069e 46000000 		.4byte	.LASF30
 1452 06a2 46000000 		.4byte	.LASF30
 1453 06a6 0A       		.byte	0xa
 1454 06a7 6E       		.byte	0x6e
 1455 06a8 1A       		.uleb128 0x1a
 1456 06a9 8E000000 		.4byte	.LASF31
 1457 06ad 8E000000 		.4byte	.LASF31
 1458 06b1 02       		.byte	0x2
 1459 06b2 4E01     		.2byte	0x14e
 1460 06b4 19       		.uleb128 0x19
 1461 06b5 71000000 		.4byte	.LASF32
 1462 06b9 71000000 		.4byte	.LASF32
 1463 06bd 0B       		.byte	0xb
 1464 06be 18       		.byte	0x18
 1465 06bf 19       		.uleb128 0x19
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 40


 1466 06c0 0C010000 		.4byte	.LASF33
 1467 06c4 0C010000 		.4byte	.LASF33
 1468 06c8 0C       		.byte	0xc
 1469 06c9 18       		.byte	0x18
 1470 06ca 19       		.uleb128 0x19
 1471 06cb 00000000 		.4byte	.LASF34
 1472 06cf 00000000 		.4byte	.LASF34
 1473 06d3 0D       		.byte	0xd
 1474 06d4 56       		.byte	0x56
 1475 06d5 00       		.byte	0
 1476              		.section	.debug_abbrev,"",%progbits
 1477              	.Ldebug_abbrev0:
 1478 0000 01       		.uleb128 0x1
 1479 0001 11       		.uleb128 0x11
 1480 0002 01       		.byte	0x1
 1481 0003 25       		.uleb128 0x25
 1482 0004 0E       		.uleb128 0xe
 1483 0005 13       		.uleb128 0x13
 1484 0006 0B       		.uleb128 0xb
 1485 0007 03       		.uleb128 0x3
 1486 0008 0E       		.uleb128 0xe
 1487 0009 1B       		.uleb128 0x1b
 1488 000a 0E       		.uleb128 0xe
 1489 000b 55       		.uleb128 0x55
 1490 000c 17       		.uleb128 0x17
 1491 000d 11       		.uleb128 0x11
 1492 000e 01       		.uleb128 0x1
 1493 000f 10       		.uleb128 0x10
 1494 0010 17       		.uleb128 0x17
 1495 0011 00       		.byte	0
 1496 0012 00       		.byte	0
 1497 0013 02       		.uleb128 0x2
 1498 0014 24       		.uleb128 0x24
 1499 0015 00       		.byte	0
 1500 0016 0B       		.uleb128 0xb
 1501 0017 0B       		.uleb128 0xb
 1502 0018 3E       		.uleb128 0x3e
 1503 0019 0B       		.uleb128 0xb
 1504 001a 03       		.uleb128 0x3
 1505 001b 0E       		.uleb128 0xe
 1506 001c 00       		.byte	0
 1507 001d 00       		.byte	0
 1508 001e 03       		.uleb128 0x3
 1509 001f 24       		.uleb128 0x24
 1510 0020 00       		.byte	0
 1511 0021 0B       		.uleb128 0xb
 1512 0022 0B       		.uleb128 0xb
 1513 0023 3E       		.uleb128 0x3e
 1514 0024 0B       		.uleb128 0xb
 1515 0025 03       		.uleb128 0x3
 1516 0026 08       		.uleb128 0x8
 1517 0027 00       		.byte	0
 1518 0028 00       		.byte	0
 1519 0029 04       		.uleb128 0x4
 1520 002a 16       		.uleb128 0x16
 1521 002b 00       		.byte	0
 1522 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 41


 1523 002d 0E       		.uleb128 0xe
 1524 002e 3A       		.uleb128 0x3a
 1525 002f 0B       		.uleb128 0xb
 1526 0030 3B       		.uleb128 0x3b
 1527 0031 05       		.uleb128 0x5
 1528 0032 49       		.uleb128 0x49
 1529 0033 13       		.uleb128 0x13
 1530 0034 00       		.byte	0
 1531 0035 00       		.byte	0
 1532 0036 05       		.uleb128 0x5
 1533 0037 2E       		.uleb128 0x2e
 1534 0038 01       		.byte	0x1
 1535 0039 03       		.uleb128 0x3
 1536 003a 0E       		.uleb128 0xe
 1537 003b 3A       		.uleb128 0x3a
 1538 003c 0B       		.uleb128 0xb
 1539 003d 3B       		.uleb128 0x3b
 1540 003e 05       		.uleb128 0x5
 1541 003f 27       		.uleb128 0x27
 1542 0040 19       		.uleb128 0x19
 1543 0041 49       		.uleb128 0x49
 1544 0042 13       		.uleb128 0x13
 1545 0043 20       		.uleb128 0x20
 1546 0044 0B       		.uleb128 0xb
 1547 0045 01       		.uleb128 0x1
 1548 0046 13       		.uleb128 0x13
 1549 0047 00       		.byte	0
 1550 0048 00       		.byte	0
 1551 0049 06       		.uleb128 0x6
 1552 004a 05       		.uleb128 0x5
 1553 004b 00       		.byte	0
 1554 004c 03       		.uleb128 0x3
 1555 004d 0E       		.uleb128 0xe
 1556 004e 3A       		.uleb128 0x3a
 1557 004f 0B       		.uleb128 0xb
 1558 0050 3B       		.uleb128 0x3b
 1559 0051 05       		.uleb128 0x5
 1560 0052 49       		.uleb128 0x49
 1561 0053 13       		.uleb128 0x13
 1562 0054 00       		.byte	0
 1563 0055 00       		.byte	0
 1564 0056 07       		.uleb128 0x7
 1565 0057 34       		.uleb128 0x34
 1566 0058 00       		.byte	0
 1567 0059 03       		.uleb128 0x3
 1568 005a 0E       		.uleb128 0xe
 1569 005b 3A       		.uleb128 0x3a
 1570 005c 0B       		.uleb128 0xb
 1571 005d 3B       		.uleb128 0x3b
 1572 005e 05       		.uleb128 0x5
 1573 005f 49       		.uleb128 0x49
 1574 0060 13       		.uleb128 0x13
 1575 0061 00       		.byte	0
 1576 0062 00       		.byte	0
 1577 0063 08       		.uleb128 0x8
 1578 0064 2E       		.uleb128 0x2e
 1579 0065 01       		.byte	0x1
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 42


 1580 0066 3F       		.uleb128 0x3f
 1581 0067 19       		.uleb128 0x19
 1582 0068 03       		.uleb128 0x3
 1583 0069 0E       		.uleb128 0xe
 1584 006a 3A       		.uleb128 0x3a
 1585 006b 0B       		.uleb128 0xb
 1586 006c 3B       		.uleb128 0x3b
 1587 006d 0B       		.uleb128 0xb
 1588 006e 11       		.uleb128 0x11
 1589 006f 01       		.uleb128 0x1
 1590 0070 12       		.uleb128 0x12
 1591 0071 06       		.uleb128 0x6
 1592 0072 40       		.uleb128 0x40
 1593 0073 18       		.uleb128 0x18
 1594 0074 9742     		.uleb128 0x2117
 1595 0076 19       		.uleb128 0x19
 1596 0077 01       		.uleb128 0x1
 1597 0078 13       		.uleb128 0x13
 1598 0079 00       		.byte	0
 1599 007a 00       		.byte	0
 1600 007b 09       		.uleb128 0x9
 1601 007c 34       		.uleb128 0x34
 1602 007d 00       		.byte	0
 1603 007e 03       		.uleb128 0x3
 1604 007f 0E       		.uleb128 0xe
 1605 0080 3A       		.uleb128 0x3a
 1606 0081 0B       		.uleb128 0xb
 1607 0082 3B       		.uleb128 0x3b
 1608 0083 0B       		.uleb128 0xb
 1609 0084 49       		.uleb128 0x49
 1610 0085 13       		.uleb128 0x13
 1611 0086 02       		.uleb128 0x2
 1612 0087 17       		.uleb128 0x17
 1613 0088 00       		.byte	0
 1614 0089 00       		.byte	0
 1615 008a 0A       		.uleb128 0xa
 1616 008b 1D       		.uleb128 0x1d
 1617 008c 01       		.byte	0x1
 1618 008d 31       		.uleb128 0x31
 1619 008e 13       		.uleb128 0x13
 1620 008f 11       		.uleb128 0x11
 1621 0090 01       		.uleb128 0x1
 1622 0091 12       		.uleb128 0x12
 1623 0092 06       		.uleb128 0x6
 1624 0093 58       		.uleb128 0x58
 1625 0094 0B       		.uleb128 0xb
 1626 0095 59       		.uleb128 0x59
 1627 0096 0B       		.uleb128 0xb
 1628 0097 01       		.uleb128 0x1
 1629 0098 13       		.uleb128 0x13
 1630 0099 00       		.byte	0
 1631 009a 00       		.byte	0
 1632 009b 0B       		.uleb128 0xb
 1633 009c 05       		.uleb128 0x5
 1634 009d 00       		.byte	0
 1635 009e 31       		.uleb128 0x31
 1636 009f 13       		.uleb128 0x13
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 43


 1637 00a0 02       		.uleb128 0x2
 1638 00a1 17       		.uleb128 0x17
 1639 00a2 00       		.byte	0
 1640 00a3 00       		.byte	0
 1641 00a4 0C       		.uleb128 0xc
 1642 00a5 0B       		.uleb128 0xb
 1643 00a6 01       		.byte	0x1
 1644 00a7 11       		.uleb128 0x11
 1645 00a8 01       		.uleb128 0x1
 1646 00a9 12       		.uleb128 0x12
 1647 00aa 06       		.uleb128 0x6
 1648 00ab 00       		.byte	0
 1649 00ac 00       		.byte	0
 1650 00ad 0D       		.uleb128 0xd
 1651 00ae 34       		.uleb128 0x34
 1652 00af 00       		.byte	0
 1653 00b0 31       		.uleb128 0x31
 1654 00b1 13       		.uleb128 0x13
 1655 00b2 02       		.uleb128 0x2
 1656 00b3 17       		.uleb128 0x17
 1657 00b4 00       		.byte	0
 1658 00b5 00       		.byte	0
 1659 00b6 0E       		.uleb128 0xe
 1660 00b7 0B       		.uleb128 0xb
 1661 00b8 01       		.byte	0x1
 1662 00b9 55       		.uleb128 0x55
 1663 00ba 17       		.uleb128 0x17
 1664 00bb 01       		.uleb128 0x1
 1665 00bc 13       		.uleb128 0x13
 1666 00bd 00       		.byte	0
 1667 00be 00       		.byte	0
 1668 00bf 0F       		.uleb128 0xf
 1669 00c0 34       		.uleb128 0x34
 1670 00c1 00       		.byte	0
 1671 00c2 03       		.uleb128 0x3
 1672 00c3 08       		.uleb128 0x8
 1673 00c4 3A       		.uleb128 0x3a
 1674 00c5 0B       		.uleb128 0xb
 1675 00c6 3B       		.uleb128 0x3b
 1676 00c7 0B       		.uleb128 0xb
 1677 00c8 49       		.uleb128 0x49
 1678 00c9 13       		.uleb128 0x13
 1679 00ca 02       		.uleb128 0x2
 1680 00cb 17       		.uleb128 0x17
 1681 00cc 00       		.byte	0
 1682 00cd 00       		.byte	0
 1683 00ce 10       		.uleb128 0x10
 1684 00cf 898201   		.uleb128 0x4109
 1685 00d2 00       		.byte	0
 1686 00d3 11       		.uleb128 0x11
 1687 00d4 01       		.uleb128 0x1
 1688 00d5 31       		.uleb128 0x31
 1689 00d6 13       		.uleb128 0x13
 1690 00d7 00       		.byte	0
 1691 00d8 00       		.byte	0
 1692 00d9 11       		.uleb128 0x11
 1693 00da 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 44


 1694 00dd 01       		.byte	0x1
 1695 00de 11       		.uleb128 0x11
 1696 00df 01       		.uleb128 0x1
 1697 00e0 31       		.uleb128 0x31
 1698 00e1 13       		.uleb128 0x13
 1699 00e2 00       		.byte	0
 1700 00e3 00       		.byte	0
 1701 00e4 12       		.uleb128 0x12
 1702 00e5 8A8201   		.uleb128 0x410a
 1703 00e8 00       		.byte	0
 1704 00e9 02       		.uleb128 0x2
 1705 00ea 18       		.uleb128 0x18
 1706 00eb 9142     		.uleb128 0x2111
 1707 00ed 18       		.uleb128 0x18
 1708 00ee 00       		.byte	0
 1709 00ef 00       		.byte	0
 1710 00f0 13       		.uleb128 0x13
 1711 00f1 898201   		.uleb128 0x4109
 1712 00f4 01       		.byte	0x1
 1713 00f5 11       		.uleb128 0x11
 1714 00f6 01       		.uleb128 0x1
 1715 00f7 31       		.uleb128 0x31
 1716 00f8 13       		.uleb128 0x13
 1717 00f9 01       		.uleb128 0x1
 1718 00fa 13       		.uleb128 0x13
 1719 00fb 00       		.byte	0
 1720 00fc 00       		.byte	0
 1721 00fd 14       		.uleb128 0x14
 1722 00fe 2E       		.uleb128 0x2e
 1723 00ff 01       		.byte	0x1
 1724 0100 3F       		.uleb128 0x3f
 1725 0101 19       		.uleb128 0x19
 1726 0102 03       		.uleb128 0x3
 1727 0103 0E       		.uleb128 0xe
 1728 0104 3A       		.uleb128 0x3a
 1729 0105 0B       		.uleb128 0xb
 1730 0106 3B       		.uleb128 0x3b
 1731 0107 0B       		.uleb128 0xb
 1732 0108 27       		.uleb128 0x27
 1733 0109 19       		.uleb128 0x19
 1734 010a 11       		.uleb128 0x11
 1735 010b 01       		.uleb128 0x1
 1736 010c 12       		.uleb128 0x12
 1737 010d 06       		.uleb128 0x6
 1738 010e 40       		.uleb128 0x40
 1739 010f 18       		.uleb128 0x18
 1740 0110 9742     		.uleb128 0x2117
 1741 0112 19       		.uleb128 0x19
 1742 0113 01       		.uleb128 0x1
 1743 0114 13       		.uleb128 0x13
 1744 0115 00       		.byte	0
 1745 0116 00       		.byte	0
 1746 0117 15       		.uleb128 0x15
 1747 0118 2E       		.uleb128 0x2e
 1748 0119 01       		.byte	0x1
 1749 011a 3F       		.uleb128 0x3f
 1750 011b 19       		.uleb128 0x19
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 45


 1751 011c 03       		.uleb128 0x3
 1752 011d 0E       		.uleb128 0xe
 1753 011e 3A       		.uleb128 0x3a
 1754 011f 0B       		.uleb128 0xb
 1755 0120 3B       		.uleb128 0x3b
 1756 0121 0B       		.uleb128 0xb
 1757 0122 27       		.uleb128 0x27
 1758 0123 19       		.uleb128 0x19
 1759 0124 49       		.uleb128 0x49
 1760 0125 13       		.uleb128 0x13
 1761 0126 8701     		.uleb128 0x87
 1762 0128 19       		.uleb128 0x19
 1763 0129 11       		.uleb128 0x11
 1764 012a 01       		.uleb128 0x1
 1765 012b 12       		.uleb128 0x12
 1766 012c 06       		.uleb128 0x6
 1767 012d 40       		.uleb128 0x40
 1768 012e 18       		.uleb128 0x18
 1769 012f 9742     		.uleb128 0x2117
 1770 0131 19       		.uleb128 0x19
 1771 0132 01       		.uleb128 0x1
 1772 0133 13       		.uleb128 0x13
 1773 0134 00       		.byte	0
 1774 0135 00       		.byte	0
 1775 0136 16       		.uleb128 0x16
 1776 0137 01       		.uleb128 0x1
 1777 0138 01       		.byte	0x1
 1778 0139 49       		.uleb128 0x49
 1779 013a 13       		.uleb128 0x13
 1780 013b 01       		.uleb128 0x1
 1781 013c 13       		.uleb128 0x13
 1782 013d 00       		.byte	0
 1783 013e 00       		.byte	0
 1784 013f 17       		.uleb128 0x17
 1785 0140 21       		.uleb128 0x21
 1786 0141 00       		.byte	0
 1787 0142 49       		.uleb128 0x49
 1788 0143 13       		.uleb128 0x13
 1789 0144 2F       		.uleb128 0x2f
 1790 0145 0B       		.uleb128 0xb
 1791 0146 00       		.byte	0
 1792 0147 00       		.byte	0
 1793 0148 18       		.uleb128 0x18
 1794 0149 34       		.uleb128 0x34
 1795 014a 00       		.byte	0
 1796 014b 03       		.uleb128 0x3
 1797 014c 0E       		.uleb128 0xe
 1798 014d 3A       		.uleb128 0x3a
 1799 014e 0B       		.uleb128 0xb
 1800 014f 3B       		.uleb128 0x3b
 1801 0150 0B       		.uleb128 0xb
 1802 0151 49       		.uleb128 0x49
 1803 0152 13       		.uleb128 0x13
 1804 0153 3F       		.uleb128 0x3f
 1805 0154 19       		.uleb128 0x19
 1806 0155 02       		.uleb128 0x2
 1807 0156 18       		.uleb128 0x18
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 46


 1808 0157 00       		.byte	0
 1809 0158 00       		.byte	0
 1810 0159 19       		.uleb128 0x19
 1811 015a 2E       		.uleb128 0x2e
 1812 015b 00       		.byte	0
 1813 015c 3F       		.uleb128 0x3f
 1814 015d 19       		.uleb128 0x19
 1815 015e 3C       		.uleb128 0x3c
 1816 015f 19       		.uleb128 0x19
 1817 0160 6E       		.uleb128 0x6e
 1818 0161 0E       		.uleb128 0xe
 1819 0162 03       		.uleb128 0x3
 1820 0163 0E       		.uleb128 0xe
 1821 0164 3A       		.uleb128 0x3a
 1822 0165 0B       		.uleb128 0xb
 1823 0166 3B       		.uleb128 0x3b
 1824 0167 0B       		.uleb128 0xb
 1825 0168 00       		.byte	0
 1826 0169 00       		.byte	0
 1827 016a 1A       		.uleb128 0x1a
 1828 016b 2E       		.uleb128 0x2e
 1829 016c 00       		.byte	0
 1830 016d 3F       		.uleb128 0x3f
 1831 016e 19       		.uleb128 0x19
 1832 016f 3C       		.uleb128 0x3c
 1833 0170 19       		.uleb128 0x19
 1834 0171 6E       		.uleb128 0x6e
 1835 0172 0E       		.uleb128 0xe
 1836 0173 03       		.uleb128 0x3
 1837 0174 0E       		.uleb128 0xe
 1838 0175 3A       		.uleb128 0x3a
 1839 0176 0B       		.uleb128 0xb
 1840 0177 3B       		.uleb128 0x3b
 1841 0178 05       		.uleb128 0x5
 1842 0179 00       		.byte	0
 1843 017a 00       		.byte	0
 1844 017b 1B       		.uleb128 0x1b
 1845 017c 2E       		.uleb128 0x2e
 1846 017d 00       		.byte	0
 1847 017e 3F       		.uleb128 0x3f
 1848 017f 19       		.uleb128 0x19
 1849 0180 3C       		.uleb128 0x3c
 1850 0181 19       		.uleb128 0x19
 1851 0182 6E       		.uleb128 0x6e
 1852 0183 0E       		.uleb128 0xe
 1853 0184 03       		.uleb128 0x3
 1854 0185 0E       		.uleb128 0xe
 1855 0186 00       		.byte	0
 1856 0187 00       		.byte	0
 1857 0188 00       		.byte	0
 1858              		.section	.debug_loc,"",%progbits
 1859              	.Ldebug_loc0:
 1860              	.LLST0:
 1861 0000 2C000000 		.4byte	.LVL5
 1862 0004 3E000000 		.4byte	.LVL8
 1863 0008 0100     		.2byte	0x1
 1864 000a 54       		.byte	0x54
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 47


 1865 000b 3E000000 		.4byte	.LVL8
 1866 000f 44000000 		.4byte	.LVL9
 1867 0013 0300     		.2byte	0x3
 1868 0015 74       		.byte	0x74
 1869 0016 0A       		.sleb128 10
 1870 0017 9F       		.byte	0x9f
 1871 0018 6C000000 		.4byte	.LVL18
 1872 001c 6E000000 		.4byte	.LVL19
 1873 0020 0300     		.2byte	0x3
 1874 0022 74       		.byte	0x74
 1875 0023 0A       		.sleb128 10
 1876 0024 9F       		.byte	0x9f
 1877 0025 00000000 		.4byte	0
 1878 0029 00000000 		.4byte	0
 1879              	.LLST1:
 1880 002d 18000000 		.4byte	.LVL2
 1881 0031 26000000 		.4byte	.LVL4
 1882 0035 0100     		.2byte	0x1
 1883 0037 50       		.byte	0x50
 1884 0038 00000000 		.4byte	0
 1885 003c 00000000 		.4byte	0
 1886              	.LLST2:
 1887 0040 24000000 		.4byte	.LVL3
 1888 0044 2C000000 		.4byte	.LVL5
 1889 0048 0100     		.2byte	0x1
 1890 004a 52       		.byte	0x52
 1891 004b 00000000 		.4byte	0
 1892 004f 00000000 		.4byte	0
 1893              	.LLST3:
 1894 0053 5C000000 		.4byte	.LVL13
 1895 0057 6C000000 		.4byte	.LVL18
 1896 005b 0100     		.2byte	0x1
 1897 005d 55       		.byte	0x55
 1898 005e 70000000 		.4byte	.LVL20
 1899 0062 BE000000 		.4byte	.LVL29
 1900 0066 0100     		.2byte	0x1
 1901 0068 55       		.byte	0x55
 1902 0069 00000000 		.4byte	0
 1903 006d 00000000 		.4byte	0
 1904              	.LLST4:
 1905 0071 5C000000 		.4byte	.LVL13
 1906 0075 6C000000 		.4byte	.LVL18
 1907 0079 0100     		.2byte	0x1
 1908 007b 54       		.byte	0x54
 1909 007c 70000000 		.4byte	.LVL20
 1910 0080 76000000 		.4byte	.LVL21
 1911 0084 0100     		.2byte	0x1
 1912 0086 54       		.byte	0x54
 1913 0087 00000000 		.4byte	0
 1914 008b 00000000 		.4byte	0
 1915              	.LLST5:
 1916 008f 14000000 		.4byte	.LVL35
 1917 0093 1A000000 		.4byte	.LVL36
 1918 0097 0200     		.2byte	0x2
 1919 0099 3A       		.byte	0x3a
 1920 009a 9F       		.byte	0x9f
 1921 009b 1A000000 		.4byte	.LVL36
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 48


 1922 009f 7A000000 		.4byte	.LVL51
 1923 00a3 0100     		.2byte	0x1
 1924 00a5 55       		.byte	0x55
 1925 00a6 00000000 		.4byte	0
 1926 00aa 00000000 		.4byte	0
 1927              	.LLST6:
 1928 00ae 14000000 		.4byte	.LVL35
 1929 00b2 1A000000 		.4byte	.LVL36
 1930 00b6 0200     		.2byte	0x2
 1931 00b8 30       		.byte	0x30
 1932 00b9 9F       		.byte	0x9f
 1933 00ba 1A000000 		.4byte	.LVL36
 1934 00be 2E000000 		.4byte	.LVL41
 1935 00c2 0100     		.2byte	0x1
 1936 00c4 54       		.byte	0x54
 1937 00c5 00000000 		.4byte	0
 1938 00c9 00000000 		.4byte	0
 1939              		.section	.debug_aranges,"",%progbits
 1940 0000 3C000000 		.4byte	0x3c
 1941 0004 0200     		.2byte	0x2
 1942 0006 00000000 		.4byte	.Ldebug_info0
 1943 000a 04       		.byte	0x4
 1944 000b 00       		.byte	0
 1945 000c 0000     		.2byte	0
 1946 000e 0000     		.2byte	0
 1947 0010 00000000 		.4byte	.LFB62
 1948 0014 DC000000 		.4byte	.LFE62-.LFB62
 1949 0018 00000000 		.4byte	.LFB64
 1950 001c 28000000 		.4byte	.LFE64-.LFB64
 1951 0020 00000000 		.4byte	.LFB63
 1952 0024 90000000 		.4byte	.LFE63-.LFB63
 1953 0028 00000000 		.4byte	.LFB65
 1954 002c 28000000 		.4byte	.LFE65-.LFB65
 1955 0030 00000000 		.4byte	.LFB66
 1956 0034 64000000 		.4byte	.LFE66-.LFB66
 1957 0038 00000000 		.4byte	0
 1958 003c 00000000 		.4byte	0
 1959              		.section	.debug_ranges,"",%progbits
 1960              	.Ldebug_ranges0:
 1961 0000 5C000000 		.4byte	.LBB8
 1962 0004 6C000000 		.4byte	.LBE8
 1963 0008 70000000 		.4byte	.LBB11
 1964 000c BE000000 		.4byte	.LBE11
 1965 0010 00000000 		.4byte	0
 1966 0014 00000000 		.4byte	0
 1967 0018 5C000000 		.4byte	.LBB9
 1968 001c 6C000000 		.4byte	.LBE9
 1969 0020 70000000 		.4byte	.LBB10
 1970 0024 74000000 		.4byte	.LBE10
 1971 0028 00000000 		.4byte	0
 1972 002c 00000000 		.4byte	0
 1973 0030 14000000 		.4byte	.LBB12
 1974 0034 16000000 		.4byte	.LBE12
 1975 0038 18000000 		.4byte	.LBB13
 1976 003c 2C000000 		.4byte	.LBE13
 1977 0040 00000000 		.4byte	0
 1978 0044 00000000 		.4byte	0
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 49


 1979 0048 00000000 		.4byte	.LFB62
 1980 004c DC000000 		.4byte	.LFE62
 1981 0050 00000000 		.4byte	.LFB64
 1982 0054 28000000 		.4byte	.LFE64
 1983 0058 00000000 		.4byte	.LFB63
 1984 005c 90000000 		.4byte	.LFE63
 1985 0060 00000000 		.4byte	.LFB65
 1986 0064 28000000 		.4byte	.LFE65
 1987 0068 00000000 		.4byte	.LFB66
 1988 006c 64000000 		.4byte	.LFE66
 1989 0070 00000000 		.4byte	0
 1990 0074 00000000 		.4byte	0
 1991              		.section	.debug_line,"",%progbits
 1992              	.Ldebug_line0:
 1993 0000 46020000 		.section	.debug_str,"MS",%progbits,1
 1993      02007501 
 1993      00000201 
 1993      FB0E0D00 
 1993      01010101 
 1994              	.LASF34:
 1995 0000 43795379 		.ascii	"CySysPmSleep\000"
 1995      73506D53 
 1995      6C656570 
 1995      00
 1996              	.LASF29:
 1997 000d 50696E5F 		.ascii	"Pin_Moisture_Sensor_ClearInterrupt\000"
 1997      4D6F6973 
 1997      74757265 
 1997      5F53656E 
 1997      736F725F 
 1998              	.LASF15:
 1999 0030 706F7369 		.ascii	"positive_measurements\000"
 1999      74697665 
 1999      5F6D6561 
 1999      73757265 
 1999      6D656E74 
 2000              	.LASF30:
 2001 0046 55415254 		.ascii	"UART_Start\000"
 2001      5F537461 
 2001      727400
 2002              	.LASF41:
 2003 0051 72657456 		.ascii	"retVal\000"
 2003      616C00
 2004              	.LASF23:
 2005 0058 55415254 		.ascii	"UART_UartPutString\000"
 2005      5F556172 
 2005      74507574 
 2005      53747269 
 2005      6E6700
 2006              	.LASF9:
 2007 006b 666C6F61 		.ascii	"float\000"
 2007      7400
 2008              	.LASF32:
 2009 0071 50696E5F 		.ascii	"Pin_Light_Sensor_int_StartEx\000"
 2009      4C696768 
 2009      745F5365 
 2009      6E736F72 
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 50


 2009      5F696E74 
 2010              	.LASF31:
 2011 008e 5254435F 		.ascii	"RTC_Start\000"
 2011      53746172 
 2011      7400
 2012              	.LASF1:
 2013 0098 756E7369 		.ascii	"unsigned char\000"
 2013      676E6564 
 2013      20636861 
 2013      7200
 2014              	.LASF40:
 2015 00a6 696E7075 		.ascii	"inputTime\000"
 2015      7454696D 
 2015      6500
 2016              	.LASF5:
 2017 00b0 6C6F6E67 		.ascii	"long unsigned int\000"
 2017      20756E73 
 2017      69676E65 
 2017      6420696E 
 2017      7400
 2018              	.LASF3:
 2019 00c2 73686F72 		.ascii	"short unsigned int\000"
 2019      7420756E 
 2019      7369676E 
 2019      65642069 
 2019      6E7400
 2020              	.LASF19:
 2021 00d5 50696E5F 		.ascii	"Pin_Moisture_Sensor_Handler\000"
 2021      4D6F6973 
 2021      74757265 
 2021      5F53656E 
 2021      736F725F 
 2022              	.LASF28:
 2023 00f1 50696E5F 		.ascii	"Pin_pump_Write\000"
 2023      70756D70 
 2023      5F577269 
 2023      746500
 2024              	.LASF25:
 2025 0100 5254435F 		.ascii	"RTC_GetTime\000"
 2025      47657454 
 2025      696D6500 
 2026              	.LASF33:
 2027 010c 50696E5F 		.ascii	"Pin_Moisture_Sensor_int_StartEx\000"
 2027      4D6F6973 
 2027      74757265 
 2027      5F53656E 
 2027      736F725F 
 2028              	.LASF37:
 2029 012c 583A5C44 		.ascii	"X:\\Dokumente\\Uni\\TUM\\6.Semester\\Embedded Syste"
 2029      6F6B756D 
 2029      656E7465 
 2029      5C556E69 
 2029      5C54554D 
 2030 015a 6D735C47 		.ascii	"ms\\GreenGardening\\Greengarden\\Greengarden.cydsn\000"
 2030      7265656E 
 2030      47617264 
 2030      656E696E 
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 51


 2030      675C4772 
 2031              	.LASF10:
 2032 018a 646F7562 		.ascii	"double\000"
 2032      6C6500
 2033              	.LASF39:
 2034 0191 5254435F 		.ascii	"RTC_GetHours\000"
 2034      47657448 
 2034      6F757273 
 2034      00
 2035              	.LASF42:
 2036 019e 6D61696E 		.ascii	"main\000"
 2036      00
 2037              	.LASF38:
 2038 01a3 75696E74 		.ascii	"uint32\000"
 2038      333200
 2039              	.LASF26:
 2040 01aa 50696E5F 		.ascii	"Pin_Light_Sensor_ClearInterrupt\000"
 2040      4C696768 
 2040      745F5365 
 2040      6E736F72 
 2040      5F436C65 
 2041              	.LASF8:
 2042 01ca 756E7369 		.ascii	"unsigned int\000"
 2042      676E6564 
 2042      20696E74 
 2042      00
 2043              	.LASF7:
 2044 01d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2044      206C6F6E 
 2044      6720756E 
 2044      7369676E 
 2044      65642069 
 2045              	.LASF18:
 2046 01ee 50696E5F 		.ascii	"Pin_Light_Sensor_Handler\000"
 2046      4C696768 
 2046      745F5365 
 2046      6E736F72 
 2046      5F48616E 
 2047              	.LASF14:
 2048 0207 686F7572 		.ascii	"hour\000"
 2048      00
 2049              	.LASF20:
 2050 020c 50696E5F 		.ascii	"Pin_Light_Sensor_Read\000"
 2050      4C696768 
 2050      745F5365 
 2050      6E736F72 
 2050      5F526561 
 2051              	.LASF35:
 2052 0222 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2052      43313120 
 2052      352E342E 
 2052      31203230 
 2052      31363036 
 2053 0255 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2053      20726576 
 2053      6973696F 
 2053      6E203233 
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 52


 2053      37373135 
 2054 0288 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2054      66756E63 
 2054      74696F6E 
 2054      2D736563 
 2054      74696F6E 
 2055              	.LASF27:
 2056 02b0 50696E5F 		.ascii	"Pin_Moisture_Sensor_Read\000"
 2056      4D6F6973 
 2056      74757265 
 2056      5F53656E 
 2056      736F725F 
 2057              	.LASF13:
 2058 02c9 73697A65 		.ascii	"sizetype\000"
 2058      74797065 
 2058      00
 2059              	.LASF6:
 2060 02d2 6C6F6E67 		.ascii	"long long int\000"
 2060      206C6F6E 
 2060      6720696E 
 2060      7400
 2061              	.LASF36:
 2062 02e0 6D61696E 		.ascii	"main.c\000"
 2062      2E6300
 2063              	.LASF11:
 2064 02e7 63686172 		.ascii	"char\000"
 2064      00
 2065              	.LASF44:
 2066 02ec 6D656D63 		.ascii	"memcpy\000"
 2066      707900
 2067              	.LASF2:
 2068 02f3 73686F72 		.ascii	"short int\000"
 2068      7420696E 
 2068      7400
 2069              	.LASF43:
 2070 02fd 62756666 		.ascii	"buffer\000"
 2070      657200
 2071              	.LASF16:
 2072 0304 63686563 		.ascii	"checkLight\000"
 2072      6B4C6967 
 2072      687400
 2073              	.LASF24:
 2074 030f 50696E5F 		.ascii	"Pin_LED_blue_Write\000"
 2074      4C45445F 
 2074      626C7565 
 2074      5F577269 
 2074      746500
 2075              	.LASF4:
 2076 0322 6C6F6E67 		.ascii	"long int\000"
 2076      20696E74 
 2076      00
 2077              	.LASF17:
 2078 032b 63686563 		.ascii	"checkMoisture\000"
 2078      6B4D6F69 
 2078      73747572 
 2078      6500
 2079              	.LASF12:
ARM GAS  C:\Users\Anselm\AppData\Local\Temp\ccjWHNLS.s 			page 53


 2080 0339 6C6F6E67 		.ascii	"long double\000"
 2080      20646F75 
 2080      626C6500 
 2081              	.LASF0:
 2082 0345 7369676E 		.ascii	"signed char\000"
 2082      65642063 
 2082      68617200 
 2083              	.LASF22:
 2084 0351 73707269 		.ascii	"sprintf\000"
 2084      6E746600 
 2085              	.LASF21:
 2086 0359 43794465 		.ascii	"CyDelay\000"
 2086      6C617900 
 2087              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
